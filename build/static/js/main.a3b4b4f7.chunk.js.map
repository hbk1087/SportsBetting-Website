{"version":3,"sources":["img/at.png","img/full_sbw_logo.png","img/nobet.png","components/LoadingSpinner.js","util/LoadingIndicator.js","slices/userSlice.js","slices/activeBetSlice.js","components/BetBox.js","components/TeamSeparator.js","components/GameDetails.js","components/GameOddsHeader.js","pages/Home.js","components/MyBet.js","pages/Bets.js","slices/authSlice.js","pages/Login.js","hooks/useGoogleMapsApi.js","pages/SignUp.js","components/DepositForm.js","components/WithdrawForm.js","pages/Account.js","pages/nfl.js","pages/nba.js","components/buttons/LogoutButton.js","components/Welcome.js","components/Navbar.js","components/PrivateRoute.js","components/NotFound.js","components/Sidebar.js","context/betslipTheme.js","components/BetslipBet.js","components/CircleCounter.js","components/EmptyBetslip.js","components/Betslip.js","App.js","slices/betSlice.js","store.js","index.js"],"names":["module","exports","LoadingSpinner","React","createElement","className","LoadingIndicator","_ref","text","margtop","wid","Container","style","display","width","margin","flexDirection","alignItems","justifyContent","flexWrap","gap","marginTop","spacing","elevation","Typography","variant","align","color","userSlice","createSlice","name","initialState","username","balance","lifetime_winnings","reducers","setUsername","state","action","payload","placeBet","amount","initializeBalance","actions","formattedOddsSpread","number","concat","formalizeBetType","bet_type","activeBetSlice","bets","finalizedBets","hasActiveBets","openActiveBet","game","home_odds","away_odds","home_spread_odds","home_spread","away_spread_odds","away_spread","over_odds","total","under_odds","push","addFinalizedBet","console","error","existingBetIndex","findIndex","b","game_id","formattedBet","removeGameByIdAndType","filter","bet","log","clearActiveBets","submitBets","dispatch","getState","activeBets","authToken","auth","token","submissionError","bet_ids","calculateTotalWager","reduce","wager","alert","Promise","all","map","requestData","method","url","headers","Authorization","data","account_username","potential_payout","odds","points","timestamp","axios","then","response","status","catch","id","outputBets","addActiveBet","updateExistingFinalizedBet","BetBox","useDispatch","useSelector","handleBetBoxClick","_ref2","betExists","find","renderedForm","RenderAwaySpreadForm","isClicked","setIsClicked","useState","useEffect","some","containerClassName","onClick","current","RenderHomeSpreadForm","RenderMoneylineAwayForm","RenderMoneylineHomeForm","RenderTotalOverForm","RenderTotalUnderForm","TeamSeparator","src","atSymbol","teamToComponent","NFLLogos","NBALogos","TeamComponent","teamName","Component","Suspense","fallback","TeamName","styled","fontWeight","fontSize","StyledGridContainer","Grid","StyledBetBox","border","borderRadius","height","padding","LogoContainer","paddingLeft","NameContainer","minWidth","BetOptionsContainer","alignContent","TeamBetContainer","BottomContainer","flexGrow","marginLeft","DateContainer","marginBottom","BestBetContainer","marginRight","BestBetButton","Button","paddingBottom","paddingTop","maxHeight","backgroundColor","BestBetText","alignText","EdgeText","WordsContainer","paddingRight","LogoDateContainer","GameDetails","_ref3","date","sport","away_team","home_team","best_bet_type","best_bet_edge","convertBackToOriginalBetType","betTypeName","bb","getBestBet","new_date","inputDate","inputDateObj","Date","day","getDate","month","getMonth","hours","getHours","ampm","displayHours","displayMinutes","getMinutes","toString","padStart","formatDate","container","borderBottom","spread","_ref4","handleBestBetClick","GameOddsHeader","sportName","Home","setGame","loading","setLoading","document","title","res","finally","gameItem","index","key","borderColor","MainContainer","WagerContainer","WagerAmountContainer","PayoutContainer","Amount","SecondaryContainer","BetName","Odds","BetTypeName","TotalWager","GameDate","BetInfoContainer","BetNameContainer","OddsContainer","GameContainer","MyBet","away_score","home_score","actual_payout","game_date","Payout","theme","palette","success","main","bet_date","game_time","bet_name","getBetName","bet_type_name","getBetTypeName","Fragment","toUpperCase","Bets","setBet","length","maxWidth","betItem","authSlice","loggedIn","setToken","removeToken","setLoggedIn","Login","googleMapsApi","navigate","useNavigate","formData","setFormData","password","handleChange","event","value","target","prevNote","Paper","gutterBottom","onSubmit","preventDefault","access_token","direction","item","TextField","required","fullWidth","label","onChange","type","href","callbacks","useGoogleMapsApi","setApi","callback","useCallback","window","google","maps","loadScript","async","each","init","SignupGrid","SignUp","first_name","last_name","email","phone_number","address","autocompleteRef","useRef","inputRef","options","componentRestrictions","country","places","Autocomplete","addListener","place","getPlace","justifyContext","DepositForm","onClose","currentBalance","depositAmount","setDepositAmount","user","e","deposit","parseFloat","isNaN","expectedBalance","Number","current_balance","toFixed","textAlign","step","min","WithdrawForm","withdrawAmount","setWithdrawAmount","withdraw","Account","DepositButton","WithdrawButton","isPopupOpen","setPopupOpen","togglePopup","isPopupOpen2","setPopupOpen2","togglePopup2","accountData","setAccountData","authLoggedIn","localStorage","removeItem","NFLPage","NBAPage","LogoutButton","onLogout","Box","sx","Welcome","LoginButton","SignupButton","MyBetsButton","Navbar","AppBar","position","Toolbar","Link","to","logo","alt","component","AccountCircleIcon","PrivateRoute","isLoggedIn","children","Navigate","NotFoundPage","timer","setTimeout","clearTimeout","Sidebar","imageUrl","link","BetslipThemeContext","createContext","colors","background","ThemeProvider","Provider","BetslipContainer","content","left","right","bottom","BetslipBetInformationContainer","RemoveBetContainer","TeamNameAndOddsContainer","TeamNameContainer","TypeOfBetAndCashOutContainer","TypeOfBetContainer","CashOutContainer","VersusAndTimeContainer","VersusContainer","TimeContainer","WagerAndWinContainer","ToWinContainer","formatTimestamp","year","getFullYear","minutes","seconds","getSeconds","BetslipBet","setFormattedBet","now","onRemove","parsedValue","parseInt","prevState","num","Math","floor","IconButton","RemoveCircleOutlineIcon","CheckCircleOutlineIcon","formattedBetType","dateTimeStr","getDay","hour","formatDateTime","InputLabelProps","shrink","InputProps","startAdornment","InputAdornment","input","CircleCounter","bgcolor","styles","minHeight","paper","image","EmptyBetslip","noBetsMessage","instructionsMessage","noBetsIcon","BetslipHeaderContainer","BetslipTitleCounter","BetslipsContainer","overflow","RemoveBetsContainer","RemoveButton","SubmitBetsButton","LoginOrSignupButton","SubmitAllBets","Betslip","img","startIcon","DeleteIcon","createTheme","primary","secondary","white","App","hasToken","loginmatch","useMatch","signupmatch","Routes","Route","path","element","NotFound","betsSlice","addBet","removeBet","updateBet","authPersistConfig","storage","blacklist","userPersistConfig","persistAuthReducer","persistReducer","authReducer","persistUserReducer","userReducer","store","configureStore","reducer","betsReducer","activeBetsReducer","persistor","persistStore","ReactDOM","createRoot","getElementById","render","StrictMode","PersistGate","Router"],"mappings":"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","file":"static/js/main.a3b4b4f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/at.36a0c84b.png\";","module.exports = __webpack_public_path__ + \"static/media/full_sbw_logo.74e53f0a.png\";","module.exports = __webpack_public_path__ + \"static/media/nobet.db779d9a.png\";","import React from 'react';\nimport '../css/Loading.css'; \n\nfunction LoadingSpinner() {\n  return (\n    <div className=\"loading-spinner\"></div>\n  );\n}\n\nexport default LoadingSpinner;\n","// LoadingIndicator.js\nimport React from 'react';\n\n// MUI\nimport { Typography, Container } from '@mui/material';\nimport LoadingSpinner from '../components/LoadingSpinner';\n\n\nfunction LoadingIndicator({text, margtop, wid}) {\n  return (\n    <Container style={{ display: 'flex', width: wid, margin: '0 auto', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', flexWrap:'nowrap', gap: '30px', marginTop: margtop }} spacing={3} elevation={3}>\n        <Typography variant=\"h3\" align=\"center\" color=\"primary\">\n            {text}\n        </Typography>\n        <LoadingSpinner />\n    </Container>\n  );\n}\n\nexport default LoadingIndicator;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  username: \"test\",\n  balance: 1000,\n  lifetime_winnings: 0,\n};\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUsername: (state, action) => {\n      state.username = action.payload;\n    },\n    placeBet: (state, action) => {\n      state.balance -= action.payload.amount;\n      state.lifetime_winnings -= action.payload.amount;\n    },\n    initializeBalance: (state, action) => {\n      state.balance = action.payload\n    },\n  }\n});\n\nexport const { setUsername, placeBet, initializeBalance } = userSlice.actions;\nexport default userSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport axios from 'axios';\n\nimport { initializeBalance } from './userSlice';\n\nfunction truncateToTwoDecimals(num) {\n    return Math.floor(num * 100) / 100;\n}\n  \nfunction formatTimestamp(timestamp) {\n    const date = new Date(timestamp);\n\n    const year = date.getFullYear();\n    // getMonth() returns 0-11, adding 1 to make it 1-12\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    let hours = date.getHours();\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    const seconds = date.getSeconds().toString().padStart(2, '0');\n\n    // Converting 24hr format to 12hr format\n    const ampm = hours >= 12 ? 'PM' : 'AM';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds} ${ampm}`;\n}\n\nconst formattedOddsSpread = (number) => {\n    if (typeof number !== 'number') return \"Not a number\";\n    return number > 0 ? `+${number}` : (number === 0 ? \"0\" : `${number}`)\n}\n\nconst formalizeBetType = (bet_type) => {\n    switch (bet_type) {\n        case \"away_spread\":\n            return \"Away Line\";\n        case \"home_spread\":\n            return \"Home Line\";\n        case \"total_over\":\n            return \"Over\";\n        case \"total_under\":\n            return \"Under\";\n        case \"moneyline_home\":\n            return \"Home\";\n        case \"moneyline_away\":\n            return \"Away\";\n        case \"Away Line\":\n            return \"Away Line\";\n        case \"Home Line\":\n            return \"Home Line\";\n        case \"Over\":\n            return \"Over\";\n        case \"Under\":\n            return \"Under\";\n        case \"Home\":\n            return \"Home\";\n        case \"Away\":\n            return \"Away\";\n        default:\n            return \"Unknown Bet Type\";\n    }\n}\n\nconst initialState = {\n    bets: [],\n    finalizedBets: [],\n    hasActiveBets: false\n};\n\nconst activeBetSlice = createSlice({\n    name: 'activeBets',\n    initialState,\n    reducers: {\n        openActiveBet: (state, action) => {\n\n            var betTypeName = null;\n            var odds = null;\n            var points = \"Money Line\";\n\n            if (action.payload.bet_type === \"moneyline_home\") {\n                betTypeName = \"Home\";\n                odds = action.payload.game.home_odds;\n            } else if (action.payload.bet_type === \"moneyline_away\") {\n                betTypeName = \"Away\";\n                odds = action.payload.game.away_odds;\n            } else if (action.payload.bet_type === \"home_spread\") {\n                betTypeName = \"Home Line\";\n                odds = action.payload.game.home_spread_odds;\n                points = formattedOddsSpread(action.payload.game.home_spread);\n            } else if (action.payload.bet_type === \"away_spread\") {\n                betTypeName = \"Away Line\";\n                odds = action.payload.game.away_spread_odds;\n                points = formattedOddsSpread(action.payload.game.away_spread);\n            } else if (action.payload.bet_type === \"total_over\") {\n                betTypeName = \"Over\";\n                odds = action.payload.game.over_odds;\n                points = `${action.payload.game.total}`;\n            } else if (action.payload.bet_type === \"total_under\") {\n                betTypeName = \"Under\";\n                odds = action.payload.game.under_odds;\n                points = `${action.payload.game.total}`;\n            }\n\n            state.bets.push(action.payload);\n            state.hasActiveBets = true;\n        },\n        addFinalizedBet: (state, action) => {\n            if (action.payload === null) {\n                console.error(\"Bet element is null. Please check your bet.\");\n                return state;\n            }\n\n            const existingBetIndex = state.finalizedBets.findIndex(b => \n                b.game_id === action.payload.formattedBet.game_id && b.bet_type === action.payload.formattedBet.bet_type\n            );\n\n            if (existingBetIndex !== -1){\n                state.finalizedBets[existingBetIndex] = action.payload.formattedBet;\n            } else {\n                state.finalizedBets.push(action.payload.formattedBet);\n            }\n        },\n        removeGameByIdAndType: (state, action) => {\n            state.bets = state.bets.filter(bet => !(bet.game.game_id === action.payload.game_id && formalizeBetType(bet.bet_type) === formalizeBetType(action.payload.bet_type)));\n\n            console.log(action.payload.bet_type);\n\n            state.finalizedBets = state.finalizedBets.filter(bet => !(bet.game_id === action.payload.game_id && formalizeBetType(bet.bet_type) === formalizeBetType(action.payload.bet_type)));\n        },\n        clearActiveBets: (state) => {\n            state.hasActiveBets = false;\n            state.bets = [];\n            state.finalizedBets = [];\n        }, \n    }\n})\n\nexport const submitBets = () => (dispatch, getState) => {\n    const state = getState();\n    const bets = state.activeBets.finalizedBets;\n    const authToken = state.auth.token;\n\n    const submissionError = {\n        error: null,\n        bet_ids: []\n    }\n\n    const outputBets = (bets) => {\n        for (const bet of bets){\n            console.log(bet);\n        }\n    };\n\n    // check wager total of all bets against balance\n\n    const calculateTotalWager = (bets) => bets.reduce((total, bet) => total + bet.wager, 0);\n\n    console.log(\"total wager:\", calculateTotalWager(bets));\n    const balance = state.auth.balance;\n\n    if (calculateTotalWager > balance) {\n        console.log(\"Not enough funds. Please deposit more money.\");\n        alert(\"Not enough funds. Please deposit more money.\"); \n        return;\n    }\n\n    return Promise.all(bets.map(bet => {\n\n        const requestData = {\n            method: \"POST\",\n            url:\"http://0.0.0.0:5000//api/bets\",\n            headers: {\n              Authorization: 'Bearer ' + authToken\n            },\n            data: {\n                \"account_username\": bet.account_username,\n                \"game_id\": bet.game_id,\n                \"bet_type\": bet.bet_type,\n                \"wager\": bet.wager,\n                \"potential_payout\": bet.potential_payout,\n                \"odds\": bet.odds,\n                \"points\": bet.points,\n                \"timestamp\": bet.timestamp,\n            }\n        };\n\n        console.log(\"request data\", requestData);\n\n        return axios(requestData)\n        .then(response => {\n            if (response.status === 201) {\n                // dispatch(removeGameByIdAndType({game_id: bet.game_id, bet_type: bet.bet_type}));\n            }\n            \n        })\n        .catch(error => {\n            if (error.response.status === 400) {\n                if (error.response.data.error === \"Insufficient funds for wager\") {\n                    submissionError.error = \"Not enough funds. Please deposit more money.\";\n                    submissionError.bet_ids.push(bet.id);\n                    throw(error);\n                } else if (error.response.data.error === \"Bet is not completely filled out\") {\n                    submissionError.error = \"Invalid bet. Please check your bet.\";\n                    submissionError.bet_ids.push(bet.id);\n                    throw(error);\n              }\n        }\n\n        });\n    }))\n    .then(() => {\n        if (submissionError.error === null){\n            dispatch(initializeBalance(balance - calculateTotalWager));\n            dispatch(clearActiveBets());\n\n            outputBets(bets);\n        }\n        \n    })\n    .catch(error => {\n        if (submissionError.error !== null) {\n            alert(submissionError.error);\n        }\n    }\n    );\n};\n\n\nexport const { addActiveBet, addFinalizedBet, updateExistingFinalizedBet, clearActiveBets, openActiveBet, removeGameByIdAndType } = activeBetSlice.actions;\nexport default activeBetSlice.reducer;","// React\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openActiveBet, removeGameByIdAndType } from '../slices/activeBetSlice';\n\n// CSS\nimport '../css/BoxGrid.css';\n\nfunction BetBox({\n  bet_type,\n  away_odds,\n  home_odds,\n  away_spread,\n  away_spread_odds,\n  home_spread,\n  home_spread_odds,\n  total,\n  over_odds,\n  under_odds,\n  game,\n}) {\n\n  const dispatch = useDispatch();\n  const bets = useSelector((state) => state.activeBets.bets);\n  const hasActiveBets = useSelector((state) => state.activeBets.hasActiveBets)\n\n  // username, bet, wager, potential payout\n\n  const handleBetBoxClick = ({bet_type, game}) => {\n    const betExists = bets.find(bet => bet.game.game_id === game.game_id && bet.bet_type === bet_type) ? true : false;\n\n    // console.log(betExists)\n\n    if (betExists) {\n      dispatch(removeGameByIdAndType({game_id: game.game_id, bet_type: bet_type}))\n    } else {\n      dispatch(openActiveBet({bet_type: bet_type, game: game}))  \n    }\n\n  }\n\n  const RenderAwaySpreadForm = () => {\n    const [isClicked, setIsClicked] = useState(false);\n\n    useEffect(() => {\n      const betExists = bets.some(bet => bet.game.game_id === game.game_id && bet.bet_type === bet_type);\n\n      setIsClicked(betExists);\n\n      if (!hasActiveBets){\n        setIsClicked(false);\n      }\n\n    }, [bets, hasActiveBets])\n\n    const containerClassName = isClicked ? 'form-container-clicked' : 'form-container';\n\n    return (\n      <div className={containerClassName} onClick={() => {handleBetBoxClick({bet_type, game}); setIsClicked(current => !current)}}>\n        <div className='away-spread'>{away_spread < 0 ? away_spread : (away_spread > 0 ? `+${away_spread}` : away_spread)}</div>\n        <div className='away-spread-odds'>{away_spread_odds}</div>\n      </div>\n    );\n  };\n\n  const RenderHomeSpreadForm = () => {\n    const [isClicked, setIsClicked] = useState(false);\n\n    useEffect(() => {\n      const betExists = bets.some(bet => bet.game.game_id === game.game_id && bet.bet_type === bet_type);\n\n      setIsClicked(betExists);\n\n      if (!hasActiveBets){\n        setIsClicked(false);\n      }\n\n    }, [bets, hasActiveBets])\n\n    const containerClassName = isClicked ? 'form-container-clicked' : 'form-container';\n\n    return (\n      <div className={containerClassName} onClick={() => {handleBetBoxClick({bet_type, game}); setIsClicked(current => !current)}}>\n        <div className='home-spread'>{home_spread < 0 ? home_spread : (home_spread > 0 ? `+${home_spread}` : home_spread)}</div>\n        <div className='home-spread-odds'>{home_spread_odds}</div>\n      </div>\n    );\n  };\n\n  const RenderMoneylineAwayForm = () => {\n    const [isClicked, setIsClicked] = useState(false);\n\n    useEffect(() => {\n      const betExists = bets.some(bet => bet.game.game_id === game.game_id && bet.bet_type === bet_type);\n\n      setIsClicked(betExists);\n\n      if (!hasActiveBets){\n        setIsClicked(false);\n      }\n\n    }, [bets, hasActiveBets])\n\n    const containerClassName = isClicked ? 'form-container-clicked' : 'form-container';\n\n    return (\n      <div className={containerClassName} onClick={() => {handleBetBoxClick({bet_type, game}); setIsClicked(current => !current)}}>\n        <div className='away-odds'>{away_odds}</div>\n      </div>\n    );\n  }\n\n  const RenderMoneylineHomeForm = () => {\n    const [isClicked, setIsClicked] = useState(false);\n\n    useEffect(() => {\n      const betExists = bets.some(bet => bet.game.game_id === game.game_id && bet.bet_type === bet_type);\n\n      setIsClicked(betExists);\n\n      if (!hasActiveBets){\n        setIsClicked(false);\n      }\n\n    }, [bets, hasActiveBets])\n\n    const containerClassName = isClicked ? 'form-container-clicked' : 'form-container';\n\n    return (\n      <div className={containerClassName} onClick={() => {handleBetBoxClick({bet_type, game}); setIsClicked(current => !current)}}>\n        <div className='home-odds'>{home_odds}</div>\n      </div>\n    );\n  }\n\n\n  const RenderTotalOverForm = () => {\n    const [isClicked, setIsClicked] = useState(false);\n\n    useEffect(() => {\n      const betExists = bets.some(bet => bet.game.game_id === game.game_id && bet.bet_type === bet_type);\n\n      setIsClicked(betExists);\n\n      if (!hasActiveBets){\n        setIsClicked(false);\n      }\n\n    }, [bets, hasActiveBets])\n\n    const containerClassName = isClicked ? 'form-container-clicked' : 'form-container';\n\n    return (\n      <div className={containerClassName} onClick={() => {handleBetBoxClick({bet_type, game}); setIsClicked(current => !current)}}>\n        <div className='total'>O {total}</div>\n        <div className='over-odds'>{over_odds}</div>\n      </div>\n    );\n  };\n\n  const RenderTotalUnderForm = () => {\n    const [isClicked, setIsClicked] = useState(false);\n\n    useEffect(() => {\n      const betExists = bets.some(bet => bet.game.game_id === game.game_id && bet.bet_type === bet_type);\n\n      setIsClicked(betExists);\n\n      if (!hasActiveBets){\n        setIsClicked(false);\n      }\n\n    }, [bets, hasActiveBets])\n\n    const containerClassName = isClicked ? 'form-container-clicked' : 'form-container';\n\n    return (\n      <div className={containerClassName} onClick={() => {handleBetBoxClick({bet_type, game}); setIsClicked(current => !current)}}>\n        <div className='total'>U {total}</div>\n        <div className='under-odds'>{under_odds}</div>\n      </div>\n    );\n  }\n\n  let renderedForm;\n  switch (bet_type) {\n    case 'away_spread':\n      renderedForm = RenderAwaySpreadForm();\n      break;\n    case 'home_spread':\n      renderedForm = RenderHomeSpreadForm();\n      break;\n    case 'moneyline_away':\n      renderedForm = RenderMoneylineAwayForm();\n      break;\n    case 'moneyline_home':\n      renderedForm = RenderMoneylineHomeForm();\n      break;\n    case 'total_over':\n      renderedForm = RenderTotalOverForm();\n      break;\n    case 'total_under':\n      renderedForm = RenderTotalUnderForm();\n      break;\n    default:\n      renderedForm = null;\n      break;\n  }\n\n  // Render your component\n  // depending on the prop, display a different form\n  /* away_odds,\n        home_odds,\n        away_spread,\n        away_spread_odds,\n        home_spread,\n        home_spread_odds,\n        total,\n        over_odds,\n        under_odds */\n\n  return (\n  <div>\n    {renderedForm}\n  </div>\n  );\n\n}\n\n\nexport default BetBox;","import atSymbol from '../img/at.png'\nimport '../css/TeamSeparator.css'\nimport React from 'react';\n\nconst TeamSeparator = () => {\n\n    return (\n        <div className=\"team-separator\">\n            <img src={atSymbol} className=\"at-image\"></img>\n            <div className=\"team-separator-line\"></div>\n        </div>\n    )\n}\n\nexport default TeamSeparator;","import React, { Suspense } from 'react';\n\n// MUI\nimport { Button, Grid, Typography } from '@mui/material';\nimport { styled } from '@mui/system';\n\n// Components\nimport * as NFLLogos from 'react-nfl-logos';\nimport * as NBALogos from 'react-nba-logos';\nimport LoadingIndicator from '../util/LoadingIndicator';\nimport BetBox from \"./BetBox\"\nimport TeamSeparator from './TeamSeparator';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeGameByIdAndType, openActiveBet } from '../slices/activeBetSlice';\n\n// CSS\nimport \"../css/GameDetails.css\"\n\n\n\nfunction formatDate(inputDate) {\n  // Parse the input date string\n  const inputDateObj = new Date(inputDate);\n\n  // Define an array with month names\n  const monthNames = [\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n\n  // Extract the date components\n  const day = inputDateObj.getDate();\n  const month = monthNames[inputDateObj.getMonth()];\n  const hours = inputDateObj.getHours();\n  const minutes = inputDateObj.getMinutes();\n  const ampm = hours >= 12 ? 'PM' : 'AM';\n\n  // Convert hours from 24-hour format to 12-hour format\n  const displayHours = hours % 12 || 12;\n\n  // Ensure minutes are displayed with two digits\n  const displayMinutes = minutes.toString().padStart(2, '0');\n\n  // Determine the time zone (ET for Eastern Time)\n  const timeZone = \"ET\";\n\n  // Construct the formatted date string\n  const formattedDate = `${month} ${day}, ${displayHours}:${displayMinutes} ${ampm} ${timeZone}`;\n\n  return formattedDate;\n}\n\nconst teamToComponent = {\n  'San Francisco 49ers': NFLLogos.SF,\n  'Arizona Cardinals': NFLLogos.ARI,\n  'Atlanta Falcons': NFLLogos.ATL,\n  'Baltimore Ravens': NFLLogos.BAL,\n  'Buffalo Bills': NFLLogos.BUF,\n  'Carolina Panthers': NFLLogos.CAR,\n  'Chicago Bears': NFLLogos.CHI,\n  'Cincinnati Bengals': NFLLogos.CIN,\n  'Cleveland Browns': NFLLogos.CLE,\n  'Dallas Cowboys': NFLLogos.DAL,\n  'Denver Broncos': NFLLogos.DEN,\n  'Detroit Lions': NFLLogos.DET,\n  'Green Bay Packers': NFLLogos.GB,\n  'Houston Texans': NFLLogos.HOU,\n  'Indianapolis Colts': NFLLogos.IND,\n  'Jacksonville Jaguars': NFLLogos.JAX,\n  'Kansas City Chiefs': NFLLogos.KC,\n  'Los Angeles Chargers': NFLLogos.LAC,\n  'Los Angeles Rams': NFLLogos.LAR,\n  'Las Vegas Raiders': NFLLogos.LV,\n  'Miami Dolphins': NFLLogos.MIA,\n  'Minnesota Vikings': NFLLogos.MIN,\n  'New England Patriots': NFLLogos.NE,\n  'New Orleans Saints': NFLLogos.NO,\n  'New York Giants': NFLLogos.NYG,\n  'New York Jets': NFLLogos.NYJ,\n  'Philadelphia Eagles': NFLLogos.PHI,\n  'Pittsburgh Steelers': NFLLogos.PIT,\n  'Seattle Seahawks': NFLLogos.SEA,\n  'Tampa Bay Buccaneers': NFLLogos.TB,\n  'Tennessee Titans': NFLLogos.TEN,\n  'Washington Commanders': NFLLogos.WAS,\n  'Atlanta Hawks': NBALogos.ATL,\n  'Brooklyn Nets': NBALogos.BKN,\n  'Boston Celtics': NBALogos.BOS,\n  'Charlotte Hornets': NBALogos.CHA,\n  'Chicago Bulls': NBALogos.CHI,\n  'Cleveland Cavaliers': NBALogos.CLE,\n  'Dallas Mavericks': NBALogos.DAL,\n  'Denver Nuggets': NBALogos.DEN,\n  'Detroit Pistons': NBALogos.DET,\n  'Golden State Warriors': NBALogos.GSW,\n  'Houston Rockets': NBALogos.HOU,\n  'Indiana Pacers': NBALogos.IND,\n  'Los Angeles Clippers': NBALogos.LAC,\n  'Los Angeles Lakers': NBALogos.LAL,\n  'Memphis Grizzlies': NBALogos.MEM,\n  'Miami Heat': NBALogos.MIA,\n  'Milwaukee Bucks': NBALogos.MIL,\n  'Minnesota Timberwolves': NBALogos.MIN,\n  'New Orleans Pelicans': NBALogos.NOP,\n  'New York Knicks': NBALogos.NYK,\n  'Oklahoma City Thunder': NBALogos.OKC,\n  'Orlando Magic': NBALogos.ORL,\n  'Philadelphia 76ers': NBALogos.PHI,\n  'Phoenix Suns': NBALogos.PHX,\n  'Portland Trail Blazers': NBALogos.POR,\n  'Sacramento Kings': NBALogos.SAC,\n  'San Antonio Spurs': NBALogos.SAS,\n  'Toronto Raptors': NBALogos.TOR,\n  'Utah Jazz': NBALogos.UTA,\n  'Washington Wizards': NBALogos.WAS,\n};\n\n\nfunction TeamComponent({ teamName }) {\n  // Check if teamName is a valid key in the mapping\n  if (teamName in teamToComponent) {\n    const Component = teamToComponent[teamName];\n\n    return (\n      <Suspense fallback={<LoadingIndicator />}>\n        <Component />\n      </Suspense>\n    );\n  } else {\n    // Handle the case where teamName is not in the mapping\n    return <div>Invalid team name</div>;\n  }\n}\n\nconst TeamName = styled(Typography)({\n    fontWeight: 'bold',\n    fontSize: '1.2em',\n    color: '#ffffff',\n})\n\nconst getSpreadColor = (spread) => (spread > 0 ? \"green\" : \"red\");\n\n\nconst StyledGridContainer = styled(Grid)({\n  display: 'flex',\n  flexWrap: 'wrap',\n});\n\nconst StyledBetBox = styled(BetBox)({\n  color: '#ffffff',\n  border: '2px solid #E0E0E0',\n  borderRadius: '5px',  // Adjusted to match your image\n  width: '50px',\n  height: '80px',\n  flexDirection: 'column',  // Stack content vertically\n  justifyContent: 'center',\n  alignItems: 'center',\n  padding: '0px',\n});\n\nconst LogoContainer = styled(Grid)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '10px',  // Space between logos\n  justifyContent: 'center',\n  alignItems: 'center',\n  paddingLeft: '50px',\n});\n\nconst NameContainer = styled(Grid)({\n  minWidth: '300px',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '70px',  // Space between names\n  justifyContent: 'center',\n  alignItems: 'center'\n});\n\nconst BetOptionsContainer = styled(Grid)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '5px',  // Space between TeamBetContainers\n  alignContent: 'center',\n  justifyContent: 'center',\n});\n\nconst TeamBetContainer = styled(Grid)({\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'center',\n  alignItems: 'center'\n});\n\nconst BottomContainer = styled(Grid)({\n  display: 'flex',\n  flexDirection: 'row',\n  flexGrow: 1,\n  gap: '0px',\n  justifyContent: 'start',\n  color: '#ffffff',\n  marginLeft: '1%',\n  fontSize: '0.85em'\n});\n\nconst DateContainer = styled(Grid)({\n  display: 'flex',\n  flexDirection: 'row',\n  gap: '0px',\n  justifyContent: 'start',\n  alignItems: 'flex-end',\n  color: '#ffffff',\n  marginLeft: '1%',\n  marginBottom: '2%',\n  fontWeight: '100',\n  fontSize: '1em',\n  flexWrap: 'wrap'\n});\n\nconst BestBetContainer = styled(Grid)({\n  display: 'flex',\n  flexDirection: 'row',\n  flexGrow: 1,\n  gap: '0px',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  color: '#ffffff',\n  marginLeft: '31.5%',\n  fontWeight: '150',\n  marginRight: '2%',\n  marginBottom: '2%',\n  width: '175px'\n});\n\nconst BestBetButton = styled(Button)(({ isClicked }) => ({\n  fontSize: '1em',\n  color: 'green',\n  border: '2px solid',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  marginBottom: '2px',\n  paddingBottom: '8px',\n  paddingTop: '8px',\n  width: '124px',\n  maxHeight: '70px',\n  backgroundColor: isClicked ? 'green' : 'transparent', // TODO: Implement isClicked state\n  '&:hover': {\n      backgroundColor: 'green',\n      color: 'white'\n  },\n}));\n\nconst BestBetText = styled(Typography)({\n  fontWeight: 'bold',\n  fontSize: '1.2em',\n  color: '#ffffff',\n  alignText: 'center',\n  justifyContent: 'center'\n})\n\nconst EdgeText = styled(Typography)({\n  fontWeight: 'bold',\n  fontSize: '1.2em',\n  color: '#008001',\n  alignText: 'center',\n  justifyContent: 'center'\n})\n\nconst WordsContainer = styled(Grid)({\n  display: 'flex',\n  alignText: 'center',\n  justifyContent: 'space-between',\n  flexGrow: 1,\n  flexDirection: 'row',\n  paddingRight: '6%'\n})\n\nconst LogoDateContainer = styled(Grid)({\n  display: 'flex',\n  alignItems: 'center',\n  flexWrap: 'nowrap',\n  flexDirection: 'row',\n  width: '25%',\n  justifyContent: 'flex-start',\n  alignItems: 'flex-end',\n  paddingBottom: '1%',\n  paddingLeft: '1%'\n})\n\nconst GameDetails = ({ game }) => {\n    // Destructure game properties\n    const {\n        date,\n        sport,\n        away_team,\n        home_team,\n        away_odds,\n        home_odds,\n        away_spread,\n        away_spread_odds,\n        home_spread,\n        home_spread_odds,\n        total,\n        over_odds,\n        under_odds,\n        best_bet_type,\n        best_bet_edge\n    } = game;\n\n    const dispatch = useDispatch();\n    const bets = useSelector((state) => state.activeBets.bets);\n    const hasActiveBets = useSelector((state) => state.activeBets.hasActiveBets)\n\n    const handleBestBetClick = ({bet_type, game}) => {\n      // console.log(\"best bet type: \", bet_type, \" and game: \", game);\n\n      const betExists = bets.find(bet => bet.game.game_id === game.game_id && bet.bet_type === bet_type) ? true : false;\n  \n      // console.log(betExists)\n  \n      if (betExists) {\n        dispatch(removeGameByIdAndType({game_id: game.game_id, bet_type: bet_type}))\n      } else {\n        dispatch(openActiveBet({bet_type: bet_type, game: game}))  \n      }\n  \n    }\n\n    function getBestBet(b) {\n      let name = \"\"\n            if (b === \"Home\") {\n                name = home_team + \" Money Line\"\n            } else if (b === \"Away\") {\n                name = away_team + \" Money Line\"\n            } else if (b === \"Home Line\") {\n                if (home_spread > 0){\n                  name = home_team + \" +\" + home_spread\n                } else {\n                name = home_team + \" \" + home_spread\n                }\n            } else if (b === \"Away Line\") {\n              if (away_spread > 0){\n                name = away_team + \" +\" + away_spread\n              } else {\n              name = away_team + \" \" + away_spread\n              }\n            } else if (b === \"Over\") {\n                name =  \"Over \" + total\n            } else if (b === \"Under\") {\n                name =  \"Under \" + total\n            }   \n            return name\n    }\n\n    function convertBackToOriginalBetType(betTypeName) {\n      switch (betTypeName) {\n          case \"Home\":\n              return \"moneyline_home\";\n          case \"Away\":\n              return \"moneyline_away\";\n          case \"Home Line\":\n              return \"home_spread\";\n          case \"Away Line\":\n              return \"away_spread\";\n          case \"Over\":\n              return \"total_over\";\n          case \"Under\":\n              return \"total_under\";\n          default:\n              return \"Unknown Bet Type\";\n      }\n  }\n\n    const bb = getBestBet(best_bet_type);\n    const new_date = formatDate(date);\n\n    return (\n      <StyledGridContainer container spacing={0} alignItems=\"center\" justifyContent=\"center\" style={{borderBottom: '1px solid #2f2d2f'}}>\n        <TeamSeparator />\n        <LogoContainer>\n          <TeamComponent teamName={away_team} />\n          <TeamComponent teamName={home_team} />\n        </LogoContainer>\n\n        <NameContainer>\n          <TeamName variant=\"h6\">{away_team}</TeamName>\n          <TeamName variant=\"h6\">{home_team}</TeamName>\n        </NameContainer>\n\n        <BetOptionsContainer>\n          <TeamBetContainer>\n            <StyledBetBox bet_type={'away_spread'} away_spread={away_spread} away_spread_odds={away_spread_odds} game={game}/>\n            <StyledBetBox bet_type={'moneyline_away'} away_odds={away_odds} game={game}/>\n            <StyledBetBox bet_type={'total_over'} total={total} over_odds={over_odds} game={game}/>\n          </TeamBetContainer>\n\n          <TeamBetContainer>\n            <StyledBetBox bet_type={'home_spread'} home_spread={home_spread} home_spread_odds={home_spread_odds} color={getSpreadColor(home_spread)} game={game}/>\n            <StyledBetBox bet_type={'moneyline_home'} home_odds={home_odds} game={game}/>\n            <StyledBetBox bet_type={'total_under'} total={total} under_odds={under_odds} game={game}/>\n          </TeamBetContainer>\n        </BetOptionsContainer>\n        <BottomContainer>\n          <LogoDateContainer>\n          {sport === 'nfl' ? (\n            <img\n              src={'https://upload.wikimedia.org/wikipedia/en/thumb/a/a2/National_Football_League_logo.svg/1200px-National_Football_League_logo.svg.png'}\n              className=\"list-item-image\"\n            />\n          ) : (\n            <img\n              src={'https://upload.wikimedia.org/wikipedia/en/thumb/0/03/National_Basketball_Association_logo.svg/105px-National_Basketball_Association_logo.svg.png'}\n              className=\"list-item-image\"\n            />\n          )}\n              <DateContainer>{new_date}</DateContainer>\n          </LogoDateContainer>\n          <BestBetContainer>\n              <WordsContainer>\n                <EdgeText> {best_bet_edge} Point Edge </EdgeText>\n                <BestBetText> Best Bet: </BestBetText>\n              </WordsContainer>\n              <BestBetButton onClick={() => handleBestBetClick({bet_type: convertBackToOriginalBetType(best_bet_type), game: game})}>{bb}</BestBetButton>\n          </BestBetContainer>\n        </BottomContainer>\n      </StyledGridContainer>\n    )\n}\n\nexport default GameDetails;","import \"../css/GameDetails.css\"\nimport React from 'react';\n\nconst GameOddsHeader = ({sportName}) => {\n\n    return (\n        <header className=\"game-odds-header\">\n            <div className=\"sport-name\">\n                <h4>{sportName}</h4>\n            </div>\n            <div className=\"betting-terms\">\n                <h4 className=\"spread-header\">Spread</h4>\n                <h4 className=\"moneyline-header\">Money</h4>\n                <h4 className=\"total-header\">Total</h4>\n                \n            </div>\n            {/* <div className=\"best-bet\">\n                <h4 className=\"best-bet-header\">Best Bet</h4>\n            </div> */}\n        </header>\n    )\n    \n}\n\n\nexport default GameOddsHeader;","// React\nimport { useEffect, useState } from 'react'\nimport React from 'react';\n\n// components\nimport GameDetails from '../components/GameDetails'\nimport LoadingIndicator from '../util/LoadingIndicator';\n\n// axios\nimport axios from 'axios'\nimport GameOddsHeader from '../components/GameOddsHeader'\n\n// CSS\nimport '../css/Home.css'\n\n\nconst Home = () => {\n    const [game, setGame] = useState([{}])\n\n    // Loading symbol state\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        document.title = \"Algo | ML Sports Betting\"\n\n              axios({\n                method: \"GET\",\n                url: \"http://0.0.0.0:5000/api/home\",\n              })\n              .then((response) => {\n                const res = response.data;\n                // console.log(res);\n                setGame(res);\n              })\n              .catch((error) => {\n                if (error.response) {\n                  console.log(error.response);\n                  console.log(error.response.status);\n                  console.log(error.response.headers);\n                }\n              })\n              .finally(() => {\n                setLoading(false)\n              });\n\n    }, [])\n    \n\n    return (\n        \n            <div>\n            {loading ? (\n                <LoadingIndicator text={'Loading All Games...'} margtop={'90px'} wid={'900px'}/>\n            ) :\n            (<div className=\"page-content\">\n             <div className=\"game-odds-header\">\n                <GameOddsHeader sportName=\"Upcoming Games\"/>\n                <div className='nfl-game-container'>\n                    {game.map((gameItem, index) => (\n                        <div key={gameItem.game_id} className='game-details-container'>\n                            <GameDetails game={gameItem} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>)}\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react'\nimport { Typography, Paper, Grid } from '@mui/material';\nimport { styled } from '@mui/system';\nimport \"../css/MyBet.css\"\n\nconst StyledGridContainer = styled(Grid)({\n    display: 'flex',\n    flexWrap: 'wrap',\n    border: '1px solid',\n    borderColor: '#3f3f3f',\n    flexDirection: 'column',\n    color: '#ffffff',\n    marginBottom: '2%'\n  });\n\n\nconst MainContainer = styled(Grid)({\n    display: 'flex',\n    gap: '10px',  // Space between logos\n    flexWrap: 'wrap',\n    flexDirection: 'column',\n    backgroundColor: '#0e0d0d'\n  });\n\nconst WagerContainer = styled(Grid)({\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'nowrap',\n    backgroundColor: '#1d1e1f',\n  });\n\nconst WagerAmountContainer = styled(Grid)({\n    display: 'flex',\n    flexDirection: 'column', \n    justifyContent: 'flex-start',\n    flexGrow: 1,\n    marginLeft: '1%',\n    marginTop: '1%',\n  });\n\nconst PayoutContainer = styled(Grid)({\n    display: 'flex',\n    flexDirection: 'column', \n    marginTop: '1%',\n    justifyContent: 'flex-start',\n    alignItems: 'end',\n    marginRight: '1%',\n  });\n\nconst Amount = styled(Typography)({\n    fontWeight: 'bold',\n    fontSize: '1.2em',\n    color: '#ffffff',\n})\n\n// const Payout = styled(Typography)({\n//     fontWeight: 'bold',\n//     fontSize: '1.2em',\n//     color: '#ffffff',\n// })\n\nconst SecondaryContainer = styled(Grid)({\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'nowrap',\n    color: '#ffffff',\n    paddingLeft: '1%',\n    paddingRight: '1%',\n    backgroundColor: '#1d1e1f',\n    paddingTop: '0.5%',\n    paddingBottom: '0.5%'\n  });\n\n\nconst BetName = styled(Typography)({\n    fontWeight: 'bold',\n    fontSize: '1.2em',\n    color: '#ffffff',\n})\n\nconst Odds = styled(Typography)({\n    fontWeight: 'bold',\n    fontSize: '1.2em',\n    color: '#ffffff',\n    alignContent: 'baseline'\n})\n\nconst BetTypeName = styled(Typography)({\n    fontWeight: 'lighter',\n    fontSize: '1.1em',\n    color: '#aaaaaa',\n})\n\nconst TotalWager = styled(Typography)({\n    fontWeight: 'lighter',\n    fontSize: '1em',\n    color: '#aaaaaa',\n})\n\nconst GameDate = styled(Typography)({\n    fontWeight: 'lighter',\n    fontSize: '1em',\n    color: '#aaaaaa',\n})\n\nconst BetInfoContainer = styled(Grid)({\n    // minWidth: '95%',\n    display: 'flex',\n    flexDirection: 'row',  \n    justifyContent: 'flex-start',\n    flexGrow: 1,\n    marginLeft: '1%',\n    marginTop: '1%',\n  });\n\nconst BetNameContainer = styled(Grid)({\n    display: 'flex',\n    flexDirection: 'column', \n    justifyContent: 'flex-start',\n    flexGrow: 1,\n  });\n\n  const OddsContainer = styled(Grid)({\n    display: 'flex',\n    flexDirection: 'column',  // Space between names\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    color: '#ffffff',\n    marginRight: '1%',\n  });\n\n  const GameContainer = styled(Grid)({\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'nowrap',\n    color: '#ffffff',\n    marginLeft: '1%',\n    marginRight: '1%',\n  });\n\nfunction MyBet({ bet }) {\n\n    const { \n        sport,\n        away_team, \n        home_team, \n        away_score, \n        home_score, \n        bet_type, \n        odds, \n        points, \n        wager, \n        potential_payout, \n        actual_payout, \n        timestamp,\n        game_date \n    }  = bet;\n\n    const Payout = styled(Typography)(({ theme, actual_payout }) => ({\n        fontWeight: 'bold',\n        fontSize: '1.2em',\n        color: actual_payout !== null\n          ? actual_payout > 0\n            ? theme.palette.success.main // Green for positive actual_payout\n            : theme.palette.error.main // Red for non-positive actual_payout\n          : '#ffffff', // Default color when actual_payout is null\n      }));\n\n    function formatDate(inputDate) {\n        // Parse the input date string\n        const inputDateObj = new Date(inputDate);\n      \n        // Define an array with month names\n        const monthNames = [\n          \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n          \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n      \n        // Extract the date components\n        const day = inputDateObj.getDate();\n        const month = monthNames[inputDateObj.getMonth()];\n        const hours = inputDateObj.getHours();\n        const minutes = inputDateObj.getMinutes();\n        const ampm = hours >= 12 ? 'PM' : 'AM';\n      \n        // Convert hours from 24-hour format to 12-hour format\n        const displayHours = hours % 12 || 12;\n      \n        // Ensure minutes are displayed with two digits\n        const displayMinutes = minutes.toString().padStart(2, '0');\n      \n        // Determine the time zone (ET for Eastern Time)\n        const timeZone = \"ET\";\n      \n        // Construct the formatted date string\n        const formattedDate = `${month} ${day}, ${displayHours}:${displayMinutes} ${ampm} ${timeZone}`;\n      \n        return formattedDate;\n      }\n      const bet_date = formatDate(timestamp)\n      const game_time = formatDate(game_date)\n    \n    function getBetName(b) {\n        let name = \"\"\n        if (b === \"Home\") {\n            name = home_team\n        } else if (b === \"Away\") {\n            name = away_team\n        } else if (b === \"Home Line\") {\n            name = home_team + \" \" + points\n        } else if (b === \"Away Line\") {\n            name = away_team + \" \" + points\n        } else if (b === \"Over\") {\n            name =  \"Over \" + points\n        } else if (b === \"Under\") {\n            name =  \"Under \" + points\n        }\n\n        \n        return name\n    }\n\n    function getBetTypeName(b) {\n        let name = \"\"\n        if (b === \"Home\") {\n            name = points\n        } else if (b === \"Away\") {\n            name = points\n        } else if (b === \"Home Line\") {\n            name = \"Spread\"\n        } else if (b === \"Away Line\") {\n            name = \"Spread\"\n        } else if (b === \"Over\") {\n            name =  \"Total Points\"\n        } else if (b === \"Under\") {\n            name =  \"Total Points\"\n        }\n\n        \n        return name\n    }\n\n\n    \n    const bet_name = getBetName(bet_type)\n    const bet_type_name = getBetTypeName(bet_type)\n\n  return (\n    <StyledGridContainer>\n    \n        \n        <MainContainer className='main-container'>\n            <BetInfoContainer className='betInfo-container'>\n                <BetNameContainer className='betName-container'>\n                    <BetName variant=\"h6\">{bet_name}</BetName>\n                    <BetTypeName variant=\"h6\">{bet_type_name}</BetTypeName>\n                </BetNameContainer>\n                <OddsContainer className='odds-container'>\n                    <Odds variant=\"h6\">{odds}</Odds>\n                </OddsContainer>\n            </BetInfoContainer>\n\n            <GameContainer>\n                {away_score === null && home_score === null ? (\n                    <>\n                    <p>{away_team} @ {home_team}</p>\n                    <GameDate>{game_time}</GameDate>\n                    </>\n                ) : (\n                    <>\n                    <p>{away_team}:&nbsp;<strong>{away_score}</strong>&nbsp; @ &nbsp;{home_team}:&nbsp;<strong>{home_score}</strong></p>\n                    <GameDate>{game_time}</GameDate>\n                    </>\n                )}\n            </GameContainer>\n        </MainContainer>\n        <div className='border-div'></div>\n\n        <WagerContainer>\n            <WagerAmountContainer>\n                <Amount>$ {wager}</Amount>\n                <TotalWager>Total Wager</TotalWager>\n            </WagerAmountContainer>\n\n            <PayoutContainer>\n                {actual_payout !== null ? (\n                    <>\n                    <Payout actual_payout={actual_payout}>$ {actual_payout}</Payout>\n                    <TotalWager>Payout</TotalWager>\n                    </>\n                ) : (\n                    <>\n                    <Payout actual_payout={actual_payout}>$ {potential_payout}</Payout>\n                    <TotalWager>Potential Payout</TotalWager>\n                    </>\n                )}\n            </PayoutContainer>\n        </WagerContainer>\n        \n        <div className='border-div'></div>\n\n        <SecondaryContainer>\n            <TotalWager>Sport: {sport.toUpperCase()}</TotalWager>\n            <GameDate> Placed: {bet_date}</GameDate>\n        </SecondaryContainer>\n        \n        \n    \n    </StyledGridContainer>\n  )\n}\n\nexport default MyBet;","// React\nimport React from 'react';\nimport { useEffect, useState } from 'react'\n\n// Components\nimport MyBet from '../components/MyBet';\nimport LoadingIndicator from '../util/LoadingIndicator';\n\n// Redux\nimport { useSelector } from 'react-redux';\n\n// MUI\nimport { Typography, Container } from '@mui/material';\n\n// Axios\nimport axios from 'axios';\n\n// CSS\nimport '../css/MyBets.css';\n\n\nfunction Bets() {\n\n    const [bets, setBet] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    const authToken = useSelector((state) => state.auth.token);\n\n    useEffect(() => {\n        document.title = \"Bets\"\n        setLoading(true)\n\n        axios({\n            method: \"GET\",\n            url:\"http://0.0.0.0:5000/api/bets\",\n            headers: {\n              Authorization: 'Bearer ' + authToken\n            }\n          })\n            .then(response => {\n                console.log(response.data)\n                setBet(response.data)\n            })\n            .catch(error => {\n                console.error(\"There was some error fetching the data:\", error)\n                setBet([])\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }, [])\n\n    return (\n        <div>\n        <div className='betsContainer'>\n        <Container>\n           {loading ? (\n                <LoadingIndicator text={'Loading Bets...'} margtop={'90px'} wid={'800px'}/>\n            ) : bets.length === 0 ? (\n                <Typography variant=\"h3\" align=\"center\" color=\"#ffffff\">\n                    No Bets Placed\n                </Typography>\n            ) : (\n                <Container style={{ maxWidth: '800px', margin: '0 auto' }} spacing={3} elevation={3}>\n                    <Typography variant=\"h3\" align=\"center\" color=\"#ffffff\">\n                        My Bets\n                    </Typography>\n                    <br></br>\n                        {bets.map((betItem, index) => (\n                            <MyBet bet={betItem}/>\n                        ))}\n                </Container>\n            )}\n        </Container>\n        </div>\n        </div>\n    )\n}\n\nexport default Bets;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  token: null,\n  loggedIn : false\n};\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setToken: (state, action) => {\n      state.token = action.payload;\n    },\n    removeToken: (state) => {\n      state.token = null;\n      state.loggedIn = false;\n    },\n    setLoggedIn: (state, action) => {\n      state.loggedIn = action.payload;\n    }\n  },\n});\n\nexport const { setToken, removeToken, setLoggedIn } = authSlice.actions;\nexport default authSlice.reducer;\n","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport React from 'react';\n\n// API\nimport axios from \"axios\";\n\n// Redux\nimport { useDispatch } from 'react-redux';\nimport { setToken, setLoggedIn } from '../slices/authSlice'\nimport { setUsername } from '../slices/userSlice';\n\n// MUI\nimport { Grid, Paper, Typography, TextField, Button } from '@mui/material';\nimport '../css/Login.css';\n\nfunction Login() {\n\n    const dispatch = useDispatch();\n    let navigate = useNavigate();\n\n    const routeChangeHome = () => {\n        let path = `/`;\n        navigate(path);\n    }\n\n    const [formData, setFormData] = useState({\n      username: \"\",\n      password: \"\"\n    })\n\n    useEffect(() => {\n        document.title = \"Login\"\n    }, [])\n\n    const logMeIn = (event) => {\n        event.preventDefault()\n\n      axios({\n        method: \"POST\",\n        url:\"http://0.0.0.0:5000/api/token\",\n        data:{\n          username: formData.username,\n          password: formData.password\n         }\n      })\n      .then((response) => {\n        if (response.status === 200) {\n            dispatch(setToken(response.data.access_token))\n            dispatch(setLoggedIn(true))\n            dispatch(setUsername(formData.username))\n            console.log(response.data)\n            routeChangeHome()\n        }\n      }).catch((error) => {\n        if (error.response) {\n          console.log(error.response)\n          console.log(error.response.status)\n          console.log(error.response.headers)\n          alert(\"Wrong User Information\")\n          }\n      })\n    }\n\n    function handleChange(event) { \n      const {value, name} = event.target\n      setFormData(prevNote => ({\n          ...prevNote, [name]: value})\n      )}\n\n      return (\n        <div className=\"loginForm\">\n        <Grid container justifyContent=\"center\" alignItems=\"center\" style={{ height: '50vh', paddingTop: '90px' }}>\n          <Paper elevation={3} style={{ padding: '2rem' }}>\n            <Typography variant=\"h5\" gutterBottom justifyContent=\"center\" display=\"flex\">\n              Login\n            </Typography>\n            <form onSubmit={logMeIn}>\n              <Grid container direction=\"column\" spacing={2}>\n                <Grid item>\n                  <TextField\n                    required\n                    fullWidth\n                    label=\"Username\"\n                    name=\"username\"\n                    value={formData.username}\n                    onChange={handleChange}\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    required\n                    fullWidth\n                    label=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    value={formData.password}\n                    onChange={handleChange}\n                  />\n                </Grid>\n                <Grid item justifyContent=\"center\" display=\"flex\">\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Login\n                  </Button>\n                </Grid>\n                <Grid item justifyContent=\"center\" display=\"flex\" style={{ paddingTop: '10%' }}>\n                  <Typography gutterBottom justifyContent=\"center\" display=\"flex\">\n                    Don't have an account? &nbsp; <a href=\"/signup\">Sign up here</a>\n                  </Typography>\n                </Grid>\n              </Grid>\n            </form>\n            \n          </Paper>\n        </Grid>\n        </div>\n      );\n}\n\nexport default Login;","import { useEffect, useState, useCallback } from 'react'\nimport loadScript from 'load-script'\nimport each from 'lodash/each'\n\nvar googleMapsApi\nvar loading = false\nvar callbacks = []\n\nconst useGoogleMapsApi = () => {\n  const [, setApi] = useState()\n\n  const callback = useCallback(() => {\n    setApi(window.google.maps)\n  }, [])\n\n  useEffect(() => {\n    if (loading) {\n      callbacks.push(callback)\n    } else {\n      if (!googleMapsApi) {\n        loading = true\n        loadScript(\n          `https://maps.googleapis.com/maps/api/js?key=AIzaSyDm0gF-MTu6PotCievcTBYoLploUouvglU&libraries=places`,\n          { async: true },\n          () => {\n            loading = false\n            googleMapsApi = window.google.maps\n            setApi(window.google.maps)\n            each(callbacks, init => init())\n            callbacks = []\n          })\n      }\n    }\n  }, [])\n\n  return googleMapsApi\n}\n\nexport default useGoogleMapsApi;","// React\nimport { useRef, useEffect, useState } from 'react';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// API\nimport axios from \"axios\";\n\n// Hooks\nimport useGoogleMapsApi from '../hooks/useGoogleMapsApi';\n\n// MUI\nimport { Grid, Paper, Typography, TextField, Button } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport '../css/Login.css';\n\n\n\nconst SignupGrid = styled(Grid)(({ theme }) => ({\n  backgroundColor: '#000000',\n  height: '100vh',\n  justifyContent: 'center',\n  alignItems: 'center',\n  padding: theme.spacing(10),\n}));\n\nfunction SignUp() {\n    let navigate = useNavigate();\n\n    const routeChangeLogin = () => {\n        let path = `/login`;\n        navigate(path);\n    }\n\n    const [formData, setFormData] = useState({\n        username: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        phone_number: \"\",\n        address: \"\",\n        password: \"\"\n    })\n\n    useEffect(() => {\n        document.title = \"Signup\"\n    }, [])\n\n\n    const autocompleteRef = useRef();\n    const inputRef = useRef();\n    const googleMapsApi = useGoogleMapsApi()\n\n    const options = {\n      componentRestrictions: { country: \"us\" }\n    };\n\n    useEffect(() => {\n      if (googleMapsApi) {\n        autocompleteRef.current = new googleMapsApi.places.Autocomplete(inputRef.current, options)\n        autocompleteRef.current.addListener('place_changed',  async () => {\n          const place = await autocompleteRef.current.getPlace()\n  \n          setFormData(prevNote => ({...prevNote, address: place['formatted_address']}));\n  \n    \n        })\n      }\n    }, [googleMapsApi])\n\n    const signMeUp = (event) => {\n        event.preventDefault()\n\n      axios({\n        method: \"POST\",\n        url:\"http://0.0.0.0:5000/api/signup\",\n        data:{\n            username: formData.username,\n            first_name: formData.first_name,\n            last_name: formData.last_name,\n            email: formData.email,\n            phone_number: formData.phone_number,\n            address: formData.address,\n            password: formData.password\n         }\n      })\n      .then((response) => {\n        if (response.status === 201) {\n            // console.log(\"ur logged in uwu\")\n            routeChangeLogin()\n        } else {\n            // console.log(\"Error signing in wnw\")\n        }\n      }).catch((error) => {\n        if (error.response) {\n          console.log(error.response)\n          console.log(error.response.status)\n          console.log(error.response.headers)\n          }\n      })\n    }\n\n    function handleChange(event) { \n      const {value, name} = event.target\n      setFormData(prevNote => ({\n          ...prevNote, [name]: value})\n      )\n      // console.log(formData)\n    }\n\n\n      return (\n        <div className=\"signupForm\" >\n        <SignupGrid container justifyContext=\"center\" alignItems=\"center\" style={{ height: '50vh', paddingTop: '90px'}}>\n          <Paper elevation={3} style={{ padding: '2rem' }}>\n            <Typography variant=\"h5\" gutterBottom justifyContent=\"center\" display=\"flex\">\n              Signup\n            </Typography>\n            <form onSubmit={signMeUp}>\n              <Grid container direction=\"column\" spacing={2}>\n                <Grid item>\n                  <TextField\n                    required\n                    fullWidth\n                    label=\"Username\"\n                    name=\"username\"\n                    value={formData.username}\n                    onChange={handleChange}\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    required\n                    fullWidth\n                    label=\"First Name\"\n                    type=\"text\"\n                    name=\"first_name\"\n                    value={formData.first_name}\n                    onChange={handleChange}\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    required\n                    fullWidth\n                    label=\"Last Name\"\n                    type=\"text\"\n                    name=\"last_name\"\n                    value={formData.last_name}\n                    onChange={handleChange}\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    required\n                    fullWidth\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    required\n                    fullWidth\n                    label=\"Phone Number\"\n                    name=\"phone_number\"\n                    value={formData.phone_number}\n                    onChange={handleChange}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <TextField\n                    required\n                    fullWidth\n                    label=\"Address\"\n                    name=\"address\"\n                    value={formData.address}\n                    onChange={handleChange}\n                    inputRef={inputRef}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <TextField\n                    required\n                    fullWidth\n                    label=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    value={formData.password}\n                    onChange={handleChange}\n                  />\n                </Grid>\n                <Grid item justifyContent=\"center\" display=\"flex\">\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Sign Up\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n          </Paper>\n        </SignupGrid>\n        </div>\n      );\n}\n\nexport default SignUp;","import React, { useState } from 'react';\nimport '../css/DepositForm.css';\n// Axios\nimport axios from \"axios\";\n\nimport { useSelector, useDispatch } from 'react-redux';\n\n// Redux\nimport { setToken, setLoggedIn } from '../slices/authSlice'\nimport { initializeUser, setUsername, initializeBalance } from '../slices/userSlice';\nimport { AppBar, Toolbar, Typography, IconButton, Button } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\n// const DepositForm = ({ onClose }) => {\n//   return (\n//     <div className=\"popup-container\">\n//       <div className=\"popup\">\n//         {/* Your form content */}\n//         <button onClick={onClose}>Close</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DepositForm;\n\nconst DepositForm = ({ onClose, currentBalance }) => {\n      // Custom styled button for the Deposit\n    const InvalidButton = styled(Button)(({ theme }) => ({\n        marginRight: theme.spacing(2),\n        backgroundColor: '#fc0202',\n        '&:hover': {\n        backgroundColor: '#0056b3', // a bit darker on hover\n        }\n    }));\n  const [depositAmount, setDepositAmount] = useState(0);\n  // user authentication selectors\n  const authToken = useSelector((state) => state.auth.token);\n  const balance = useSelector((state) => state.user.balance);\n\n  const dispatch = useDispatch()\n\n  const submitDeposit = () => {\n    \n  }\n\n  const handleDeposit = (e) => {\n    e.preventDefault();\n    // Ensure depositAmount is a positive number or zero\n    const deposit = parseFloat(depositAmount);\n    if (isNaN(deposit) || deposit < 0) {\n      alert(\"Invalid deposit amount. Please enter a positive number or zero.\");\n      return;\n    }\n\n    // Calculate the expected balance by adding the deposit amount to the current balance\n    const expectedBalance = Number(currentBalance) + deposit;\n\n    // You can perform further actions here, such as updating the balance in a database or state\n    // For this example, we'll just log the expected balance\n    // console.log(`Expected Balance after deposit: ${expectedBalance}`);\n    axios({\n        method: \"PATCH\",\n        url:\"/api/account\",\n        headers: {\n            Authorization: 'Bearer ' + authToken,\n          },\n        data:{\n          current_balance: expectedBalance.toFixed(2),\n         }\n      })\n      .then((response) => {\n        if (response.status === 200) {\n            // console.log(\"balance changed\")\n            onClose()\n            balance = dispatch(initializeBalance(expectedBalance.toFixed(2)))\n            \n        }\n      }).catch((error) => {\n        if (error.response) {\n          console.log(error.response)\n          console.log(error.response.status)\n          console.log(error.response.headers)\n          }\n      })\n  };\n\n  return (\n    <div className=\"popup-container\">\n      <div className=\"popup\">\n        <p>Current Balance: ${currentBalance}</p>\n        <form onSubmit={handleDeposit}>\n          <label style={{ textAlign: 'center' }}>\n            Deposit Amount:\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              value={depositAmount}\n              onChange={(e) => setDepositAmount(e.target.value)}\n              min=\"1\"  // Prevent negative values\n            />\n          </label>\n          <div style={{ textAlign: 'center' }}>\n          <button type=\"submit\">Deposit</button>\n          </div>\n        </form>\n        <p>Expected Balance: ${depositAmount === \"\" ? currentBalance : (Number(currentBalance) + parseFloat(depositAmount)).toFixed(2)}</p>\n        <div style={{ textAlign: 'center' }}>\n        <button onClick={onClose}>Close</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DepositForm;\n\n","import React, { useState } from 'react';\nimport '../css/WithdrawForm.css';\n// Axios\nimport axios from \"axios\";\n\nimport { useSelector, useDispatch } from 'react-redux';\n\n// Redux\nimport { setToken, setLoggedIn } from '../slices/authSlice'\nimport { initializeUser, setUsername, initializeBalance } from '../slices/userSlice';\nimport { AppBar, Toolbar, Typography, IconButton, Button } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\n// const WithdrawForm = ({ onClose }) => {\n//   return (\n//     <div className=\"popup-container\">\n//       <div className=\"popup\">\n//         {/* Your form content */}\n//         <button onClick={onClose}>Close</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default WithdrawForm;\n\nconst WithdrawForm = ({ onClose, currentBalance }) => {\n      // Custom styled button for the Withdraw\n    const InvalidButton = styled(Button)(({ theme }) => ({\n        marginRight: theme.spacing(2),\n        backgroundColor: '#fc0202',\n        '&:hover': {\n        backgroundColor: '#0056b3', // a bit darker on hover\n        }\n    }));\n  const [withdrawAmount, setWithdrawAmount] = useState(0);\n  // user authentication selectors\n  const authToken = useSelector((state) => state.auth.token);\n  const balance = useSelector((state) => state.user.balance);\n\n  const dispatch = useDispatch()\n\n  const submitWithdraw = () => {\n    \n  }\n\n  const handleWithdraw = (e) => {\n    e.preventDefault();\n    // Ensure withdrawAmount is a positive number or zero\n    const withdraw = parseFloat(withdrawAmount);\n    if (isNaN(withdraw) || withdraw < 0) {\n      alert(\"Invalid withdraw amount. Please enter a positive number or zero.\");\n      return;\n    }\n    if (currentBalance - withdraw < 0) {\n      alert(\"Invalid withdraw amount. Not enough funds in balance.\");\n      return;\n    }\n\n    // Calculate the expected balance by adding the withdraw amount to the current balance\n    const expectedBalance = currentBalance - withdraw;\n\n    // You can perform further actions here, such as updating the balance in a database or state\n    // For this example, we'll just log the expected balance\n    // console.log(`Expected Balance after withdraw: ${expectedBalance}`);\n    axios({\n        method: \"PATCH\",\n        url:\"/api/account\",\n        headers: {\n            Authorization: 'Bearer ' + authToken,\n          },\n        data:{\n          current_balance: expectedBalance.toFixed(2),\n         }\n      })\n      .then((response) => {\n        if (response.status === 200) {\n            // console.log(\"balance changed\")\n            onClose()\n            balance = dispatch(initializeBalance(expectedBalance.toFixed(2)))\n            \n        }\n      }).catch((error) => {\n        if (error.response) {\n          console.log(error.response)\n          console.log(error.response.status)\n          console.log(error.response.headers)\n          }\n      })\n  };\n\n  return (\n    <div className=\"popup-container\">\n      <div className=\"popup\">\n        <p>Current Balance: ${currentBalance}</p>\n        <form onSubmit={handleWithdraw}>\n          <label style={{ textAlign: 'center' }}>\n            Withdraw Amount:\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              value={withdrawAmount}\n              onChange={(e) => setWithdrawAmount(e.target.value)}\n              min=\"1\"  // Prevent negative values\n            />\n          </label>\n          <div style={{ textAlign: 'center' }}>\n          <button type=\"submit\">Withdraw</button>\n          </div>\n        </form>\n        <p>Expected Balance: ${withdrawAmount === \"\" ? currentBalance : (currentBalance - parseFloat(withdrawAmount)).toFixed(2)}</p>\n        <div style={{ textAlign: 'center' }}>\n        <button onClick={onClose}>Close</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WithdrawForm;\n\n","// React\nimport { useState, useEffect } from 'react'\nimport React from 'react';\nimport axios from \"axios\";\n\n// Router\nimport { useNavigate } from 'react-router-dom';\n\n// Redux\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setToken, setLoggedIn } from '../slices/authSlice'\n\n// MUI\nimport { Button } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\n// Components\nimport DepositForm from '../components/DepositForm';\nimport WithdrawForm from '../components/WithdrawForm';\nimport LoadingIndicator from '../util/LoadingIndicator';\n\n// CSS\nimport '../css/Account.css';\n\nfunction Account() {\n\n  // Loading symbol state\n  const [loading, setLoading] = useState(true)\n  // Custom styled button for the Deposit\nconst DepositButton = styled(Button)(({ theme }) => ({\n  marginRight: theme.spacing(2),\n  backgroundColor: '#007BFF',\n  '&:hover': {\n    backgroundColor: '#0056b3', // a bit darker on hover\n  }\n}));\n\n// Custom styled button for the Withdraw Button\nconst WithdrawButton = styled(Button)(({ theme }) => ({\n  backgroundColor: '#28A745',\n  '&:hover': {\n  backgroundColor: '#1f7a33', // a bit darker on hover\n  }\n}));\n\n  // Deposit popup\n  const [isPopupOpen, setPopupOpen] = useState(false);\n\n  const togglePopup = () => {\n    setPopupOpen(!isPopupOpen);\n  };\n\n  // Withdraw popup\n  const [isPopupOpen2, setPopupOpen2] = useState(false);\n\n  const togglePopup2 = () => {\n    setPopupOpen2(!isPopupOpen2);\n  };\n\n\n  const [accountData, setAccountData] = useState(null)\n\n  const dispatch = useDispatch();\n\n  // user authentication selectors\n  const authToken = useSelector((state) => state.auth.token);\n  const authLoggedIn = useSelector((state) => state.auth.loggedIn);\n\n  // user data selectors\n  const username = useSelector((state) => state.user.username);\n  const balance = useSelector((state) => state.user.balance);\n\n  const navigate = useNavigate();\n\nuseEffect(() => {\n  document.title = \"Account\"\n\n  if (!authLoggedIn) {\n    // Not allowed to access page - output status message and redirect to login page.\n    console.log(\"You are not logged in\");\n    dispatch(setLoggedIn(false));\n    localStorage.removeItem(\"loggedIn\");\n\n    // ...same with token\n    dispatch(setToken(null));\n    localStorage.removeItem(\"token\");\n\n    // actually redirect\n    navigate(\"/login\");\n\n    return; // stop the execution of the effect here - important!\n  }\n\n  axios({\n    method: \"GET\",\n    url: \"http://0.0.0.0:5000/api/account\",\n    headers: {\n      Authorization: 'Bearer ' + authToken,\n    },\n  })\n  .then((response) => {\n    const res = response.data;\n    setAccountData(res);\n  })\n  .catch((error) => {\n    if (error.response) {\n      console.log(error.response);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    }\n  }).finally(() => {\n    setLoading(false)\n  });  \n}, [authLoggedIn, authToken, balance]); \n\n  return (\n    \n    <div className='pagecontent'>\n      <div className=\"account\">\n        \n      {loading ? (\n                <LoadingIndicator text={'Loading Account Details...'} margtop={'10px'} wid={'900px'}/>\n            ) : (accountData && <div>\n              <div className='account-contents'>\n                <p>\n                  <span className=\"before-curly\">Username: </span> {accountData.username}\n                </p>\n                <p>\n                  <span className=\"before-curly\">First Name: </span> {accountData.first_name}\n                </p>\n                <p>\n                  <span className=\"before-curly\">Last Name: </span> {accountData.last_name}\n                </p>\n                <p>\n                  <span className=\"before-curly\">Email: </span> {accountData.email}\n                </p>\n                <p>\n                  <span className=\"before-curly\">Address: </span> {accountData.address}\n                </p>\n                <p>\n                  <span className=\"before-curly\">Phone Number: </span> {accountData.phone_number}\n                </p>\n                <p>\n                  <span className=\"before-curly\">Lifetime Winnings: </span> $&nbsp;<span style={{ color: accountData.lifetime_winnings >= 0 ? 'green' : 'red' }}> { accountData.lifetime_winnings}</span>\n                </p>\n                <p>\n                  <span className=\"before-curly\">Current Balance: </span> $ {accountData.current_balance}\n                </p>\n              </div>\n            \n      \n          <div className='buttons'>\n          <DepositButton className='trans-buttons' color=\"white\" onClick={togglePopup}>Deposit</DepositButton>\n          {isPopupOpen && <DepositForm currentBalance={accountData.current_balance} onClose={togglePopup} />}\n          \n          <WithdrawButton className='trans-buttons' color=\"white\" onClick={togglePopup2}>Withdraw</WithdrawButton>\n          {isPopupOpen2 && <WithdrawForm currentBalance={accountData.current_balance} onClose={togglePopup2} />}\n          </div>\n        </div> )}\n      </div>\n    </div>\n  );\n}\n\nexport default Account;","// React\nimport { useEffect, useState } from 'react'\n\n// components\nimport GameDetails from '../components/GameDetails'\nimport LoadingIndicator from '../util/LoadingIndicator';\nimport React from 'react';\n\n// axios\nimport axios from 'axios'\nimport GameOddsHeader from '../components/GameOddsHeader'\n\n// CSS\nimport '../css/Home.css'\n\nconst NFLPage = () => {\n    const [game, setGame] = useState([{}])\n\n    // Loading symbol state\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        document.title = \"AlgoSportsBets\"\n\n              axios({\n                method: \"GET\",\n                url: \"http://0.0.0.0:5000/api/nfl\",\n              })\n              .then((response) => {\n                const res = response.data;\n                console.log(res);\n                setGame(res);\n              })\n              .catch((error) => {\n                if (error.response) {\n                  console.log(error.response);\n                  console.log(error.response.status);\n                  console.log(error.response.headers);\n                }\n              })\n              .finally(() => {\n                setLoading(false)\n              });\n\n    }, [])\n    \n    \n    return (\n        \n            <div>\n            {loading ? (\n                <LoadingIndicator text={'Loading NFL Games...'} margtop={'90px'} wid={'900px'}/>\n            ) :\n            (<div className=\"page-content\">\n             <div className=\"game-odds-header\">\n                <GameOddsHeader sportName=\"NFL\"/>\n                <div className='nfl-game-container'>\n                    {game.map((gameItem, index) => (\n                        <div key={gameItem.game_id} className='game-details-container'>\n                            <GameDetails game={gameItem} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>)}\n        </div>\n    )\n}\n\nexport default NFLPage;","// React\nimport { useEffect, useState } from 'react'\nimport React from 'react';\n\n// components\nimport GameDetails from '../components/GameDetails'\nimport LoadingIndicator from '../util/LoadingIndicator';\n\n// axios\nimport axios from 'axios'\nimport GameOddsHeader from '../components/GameOddsHeader'\n\n// CSS\nimport '../css/Home.css'\n\nconst NBAPage = () => {\n    const [game, setGame] = useState([{}])\n\n    // Loading symbol state\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        document.title = \"AlgoSportsBets\"\n\n              axios({\n                method: \"GET\",\n                url: \"http://0.0.0.0:5000/api/nba\",\n              })\n              .then((response) => {\n                const res = response.data;\n                console.log(res);\n                setGame(res);\n              })\n              .catch((error) => {\n                if (error.response) {\n                  console.log(error.response);\n                  console.log(error.response.status);\n                  console.log(error.response.headers);\n                }\n              })\n              .finally(() => {\n                setLoading(false)\n              });\n\n    }, [])\n    \n    \n    return (\n        \n            <div>\n            {loading ? (\n                <LoadingIndicator text={'Loading NBA Games...'} margtop={'90px'} wid={'900px'}/>\n            ) :\n            (<div className=\"page-content\">\n             <div className=\"game-odds-header\">\n                <GameOddsHeader sportName=\"NBA\"/>\n                <div className='nfl-game-container'>\n                    {game.map((gameItem, index) => (\n                        <div key={gameItem.game_id} className='game-details-container'>\n                            <GameDetails game={gameItem} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>)}\n        </div>\n    )\n}\n\nexport default NBAPage;","// React\nimport React from 'react';\n\n// Router DOM\nimport { useNavigate } from \"react-router-dom\";\n\n// Redux\nimport { useDispatch } from 'react-redux';\nimport { removeToken, setLoggedIn } from '../../slices/authSlice'\n\n// MUI\nimport { Box, Button } from '@mui/material';\n\n// Axios\nimport axios from \"axios\";\n\nconst LogoutButton = ( { onLogout } ) => {\nconst dispatch = useDispatch();\n  let navigate = useNavigate();\n\n  function logMeOut() {\n    axios({\n      method: \"POST\",\n      url:\"http://0.0.0.0:5000/api/logout\",\n    })\n    .then((response) => {\n        dispatch(removeToken())\n        dispatch(setLoggedIn(false))\n        // console.log(\"ur logged out uwu\")\n        navigate('/')\n    }).catch((error) => {\n      if (error.response) {\n        console.log(error.response)\n        console.log(error.response.status)\n        console.log(error.response.headers)\n        }\n    })}\n\n\n    return (\n        <Box sx={{ display: 'flex', gap: 1 }}>\n          <Button id=\"LOGOUT\" className=\"logoutButton\" variant=\"contained\" color=\"primary\" onClick={logMeOut}>\n            Log out\n          </Button>\n        </Box>\n    )\n}\n\nexport default LogoutButton;\n\n","import React from 'react';\n\nimport '../css/Welcome.css'\n\nimport { useSelector } from 'react-redux';\n\n\nconst Welcome = () => {\n    const username = useSelector(state => state.user.username);\n    const balance = useSelector((state) => state.user.balance);\n\n\n    return (\n        <div className=\"welcome\">\n            <h4>Welcome: &nbsp; {username}</h4>\n            <h5>Balance: ${balance}</h5>\n        </div>\n    )\n}\n\n\nexport  default Welcome;","// React \nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Redux\nimport { useSelector } from 'react-redux';\n\n// MUI\nimport { styled } from '@mui/material/styles';\nimport { AppBar, Toolbar, Button } from '@mui/material';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\n\n// Components\nimport LogoutButton from './buttons/LogoutButton';\nimport Welcome from './Welcome';\n\nimport '../css/Navbar.css';\nimport logo from '../img/full_sbw_logo.png';\n\n// Custom styled button for the login\nconst LoginButton = styled(Button)(({ theme }) => ({\n    marginRight: theme.spacing(2),\n    backgroundColor: '#007BFF',\n    '&:hover': {\n      backgroundColor: '#0056b3', // a bit darker on hover\n    }\n  }));\n  \n// Custom styled button for the signup/join\nconst SignupButton = styled(Button)(({ theme }) => ({\n    backgroundColor: '#28A745',\n    '&:hover': {\n    backgroundColor: '#1f7a33', // a bit darker on hover\n    }\n}));\n\n// Custom styled button for My Bets\nconst MyBetsButton = styled(Button)(({ theme }) => ({\n    backgroundColor: '#000000',\n    '&:hover': {\n    backgroundColor: '#1d1e1f', // a bit darker on hover\n    }\n}));\n\n\nconst Navbar = () => {\n    const authLoggedIn = useSelector((state) => state.auth.loggedIn);\n    const username = useSelector((state) => state.user.username);\n    const balance = useSelector((state) => state.user.balance);\n\n\n    useEffect(() => {\n    }, [authLoggedIn, balance])\n\n    const appBarStyles = {\n        height: '76.6px',\n        backgroundColor: \"#000000\",\n        borderBottom: \"2px solid #2f2d2f\"\n    };\n\n    return (\n        <div className='navbar'>\n            <AppBar position=\"fixed\" style={appBarStyles}>\n                <Toolbar>\n\n                    <Link to='/' >\n                        <img src={logo} alt=\"Logo\" style={{ height: '140px', width: '196px' }}></img>\n                    </Link>\n\n                    { \n                            authLoggedIn === true ?\n                            (\n                                // When logged in\n                                <>\n                                    <MyBetsButton color=\"inherit\" component={Link} to='/bets'>My Bets</MyBetsButton>\n                                    <div style={{ flexGrow: 1 }}></div>\n                                    <Welcome/>\n                                    <LogoutButton />\n                                    <MyBetsButton color=\"inherit\" component={Link} to='/account'><AccountCircleIcon fontSize=\"large\"></AccountCircleIcon></MyBetsButton>\n                                </>\n                            ) : \n                            (\n                                // When logged out\n                                <>\n                                    <div style={{ flexGrow: 1 }}></div>\n                                    <LoginButton color=\"inherit\" component={Link} to='/login'>Login</LoginButton>\n                                    <SignupButton color=\"inherit\" component={Link} to='/signup'>Signup</SignupButton>\n                                </>\n                            )\n                    }\n                    \n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport { useSelector } from 'react-redux'; \n\nimport { Navigate } from 'react-router-dom';\n\n\nconst PrivateRoute = ({ auth: { isLoggedIn }, children }) => {\n\n  return isLoggedIn ? children : <Navigate to=\"/login\" />;\n};\n\nexport default PrivateRoute;\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Redux\nimport { useSelector } from 'react-redux';\nimport React from 'react';\n\nimport LoadingIndicator from '../util/LoadingIndicator';\n\nfunction NotFoundPage() {\n    const navigate = useNavigate();\n\n    const isLoggedIn = useSelector(state => state.auth.loggedIn);\n\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            if (!isLoggedIn) {\n                navigate(\"/login\");\n            }\n            navigate('/');\n        }, 2000);\n\n    // Cleanup to prevent redirection if the component is unmounted before 2 seconds\n    return () => clearTimeout(timer);\n    }, [navigate]);\n\n    return (\n    <div>\n        <h2>\n            <div>404: Page Not Found.</div> \n            <div>Redirecting...</div>\n\n            <LoadingIndicator />\n        </h2>\n    </div>\n    )\n    }\n\n\nexport default NotFoundPage;","import React from 'react';\n// Router DOM imports\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport '../css/Sidebar.css';\n// Import other images if needed\n\nconst Sidebar = () => {\n    const sportsItems = [\n        {\n            text: 'NFL',\n            imageUrl: 'https://upload.wikimedia.org/wikipedia/en/thumb/a/a2/National_Football_League_logo.svg/1200px-National_Football_League_logo.svg.png',\n            link: '/nfl'\n        },\n        {\n            text: 'NBA',\n            imageUrl: 'https://upload.wikimedia.org/wikipedia/en/thumb/0/03/National_Basketball_Association_logo.svg/105px-National_Basketball_Association_logo.svg.png',\n            link: '/nba'\n        },\n        // {\n        //     text: 'NCAAF',\n        //     imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/2d/NCAA_logo.svg/1200px-NCAA_logo.svg.png',\n        // },\n        // {\n        //     text: 'NCAAB',\n        //     imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/2d/NCAA_logo.svg/1200px-NCAA_logo.svg.png',\n        // },\n        // {\n        //     text: 'MLB',\n        //     imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/74/MLB_Logo.svg/1200px-MLB_Logo.svg.png',\n        // },\n        // {\n        //     text: 'NHL',\n        //     imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/3a/Logo_NHL.svg/1200px-Logo_NHL.svg.png',\n        // },\n        // {\n        //     text: 'MLS',\n        //     imageUrl: 'https://upload.wikimedia.org/wikipedia/en/thumb/2/2d/Major_League_Soccer_logo.svg/1200px-Major_League_Soccer_logo.svg.png',\n        // },\n        // {\n        //     text: 'UFC',\n        //     imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/b1/UFC_logo.svg/1200px-UFC_logo.svg.png',\n        // },\n        // {\n        //     text: 'PGA',\n        //     imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/3b/PGA_Tour_logo.svg/1200px-PGA_Tour_logo.svg.png',\n        // },\n        // {\n        //     text: 'Tennis',\n        //     imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/Tennis_ball.svg/1200px-Tennis_ball.svg.png',\n        // },\n        // {\n        //     text: 'Boxing',\n        //     imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/3b/Boxing_glove.svg/1200px-Boxing_glove.svg.png',\n        // },\n        // {\n        //     text: 'NASCAR',\n        //     imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/28/NASCAR_logo.svg/1200px-NASCAR_logo.svg.png',\n        // },\n        // {\n        //     text: 'Formula 1',\n        //     imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/24/Formula_One.svg/1200px-Formula_One.svg.png',\n        // },\n        // {\n        //     text: 'Cricket',\n        //     imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/6f/Cricket_ball.svg/1200px-Cr'\n        // }\n        // Add more items as needed\n    ];\n\n    return (\n        <div className=\"sticky-sidebar\">\n            <h2 className=\"sidebar-title\">Sports</h2>\n            <ul className=\"custom-list\">\n                {sportsItems.map((item, index) => (\n                   <a key={item.link} href={item.link} className=\"no-underline\">\n                    <li key={index} className=\"list-item\">\n                            <img\n                                src={item.imageUrl}\n                                alt={item.text}\n                                className=\"list-item-image\"\n                            />\n                            {item.text}\n                    </li>\n                    </a> \n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Sidebar;\n","import React, { createContext, useContext } from 'react'\n\nconst BetslipThemeContext = createContext();\n\nexport const useTheme = () => useContext(BetslipThemeContext);\n\nconst theme = {\n    colors: {\n      background: '#ffffff',\n      text: '#000000'\n    }\n};\n\nexport const ThemeProvider = ({ children }) => {\n    return (\n        <BetslipThemeContext.Provider value={theme}>\n            {children}\n        </BetslipThemeContext.Provider>\n    )\n}","// React\nimport { React, useState, useEffect } from 'react';\n\n// MUI\nimport {  TextField, Grid, Typography, IconButton } from '@mui/material';\nimport { styled } from '@mui/system';\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport InputAdornment from '@mui/material/InputAdornment';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeGameByIdAndType, addFinalizedBet } from '../slices/activeBetSlice';\nimport { initializeBalance } from '../slices/userSlice';\n\n// CSS\nimport \"../css/BetslipBet.css\"\n\n// Context\nimport { ThemeProvider } from \"../context/betslipTheme\";\n\n// Axios\nimport axios from 'axios';\n\nconst BetslipContainer = styled(Grid)({\n  display: 'flex',\n  justifyContent: 'flex-start',\n  backgroundColor: '#131314',\n  border: '5px',\n  borderColor: 'black',\n  marginBottom: '2px',\n  position: 'relative', \n    '&::after': { \n        content: '\"\"', \n        position: 'absolute',\n        left: \"0%\", \n        right: 0, \n        bottom: '-1px', \n        height: '1px',  \n        backgroundColor: '#2d2f30',\n    }\n});\n\nconst BetslipBetInformationContainer = styled(Grid)({\n  backgroundColor: '#131314',\n  border: '5px',\n  borderColor: 'black',\n  margin: '3%'\n});\n\nconst RemoveBetContainer = styled(Grid)({\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-start',\n  margin: '3%'\n  // sx = {{display: 'flex', flexDirection: 'column', flexGrow: 1, alignItems: 'flex-start', height: '100%'}\n});\n\nconst TeamNameAndOddsContainer = styled(Grid)({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'nowrap'\n})\n\nconst TeamNameContainer = styled(Grid)({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'nowrap',\n  flexGrow: 1\n})\n\nconst OddsContainer = styled(Grid)({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'nowrap'\n})\n\nconst TypeOfBetAndCashOutContainer = styled(Grid)({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'nowrap',\n  marginBottom: '5%'\n})\n\nconst TypeOfBetContainer = styled(Grid)({\n  display: 'flex',\n  flexGrow: 1\n})\n\nconst CashOutContainer = styled(Grid)({\n  display: 'flex',\n})\n\nconst VersusAndTimeContainer = styled(Grid)({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'nowrap',\n  marginBottom: '5%'\n  \n})\n\nconst VersusContainer = styled(Grid)({\n  display: 'flex', \n  flexGrow: 1, \n})\n\nconst TimeContainer = styled(Grid)({\n  display: 'flex'\n})\n\nconst WagerAndWinContainer = styled(Grid)({\n  display: 'flex'\n})\n\nconst WagerContainer = styled(Grid)({\n  display: 'flex',\n  marginRight: '1%'\n})\n\nconst ToWinContainer = styled(Grid)({\n  display: 'flex',\n  marginLeft: '1%'\n})\n\nconst formattedOddsSpread = (number) => {\n    if (typeof number !== 'number') return \"Not a number\";\n    return number > 0 ? `+${number}` : (number === 0 ? \"0\" : `${number}`)\n}\n\nconst formattedBetType = (bet_type) => {\n    switch (bet_type) {\n        case \"away_spread\":\n        case \"home_spread\":\n            return \"Spread\";\n        case \"moneyline_away\":\n        case \"moneyline_home\":\n            return \"Moneyline\";\n        case \"total_over\":\n        case \"total_under\":\n            return \"Total Match Points\";\n        default:\n            return \"Unknown Bet Type\";\n    }\n}\n\nfunction formatDateTime(dateTimeStr) {\n  const days = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\n  const date = new Date(dateTimeStr);\n\n  // Formatting the day\n  const day = days[date.getDay()];\n\n  // Formatting the hour\n  let hour = date.getHours();\n  const ampm = hour >= 12 ? 'PM' : 'AM';\n  hour = hour % 12;\n  hour = hour ? hour : 12; // the hour '0' should be '12'\n\n  // Formatting minutes\n  const minutes = date.getMinutes().toString().padStart(2, '0');\n\n  return `${day} ${hour}:${minutes}${ampm} ET`;\n}\n\nfunction truncateToTwoDecimals(num) {\n  return Math.floor(num * 100) / 100;\n}\n\nfunction formatTimestamp(timestamp) {\n  const date = new Date(timestamp);\n\n  const year = date.getFullYear();\n  // getMonth() returns 0-11, adding 1 to make it 1-12\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  let hours = date.getHours();\n  const minutes = date.getMinutes().toString().padStart(2, '0');\n  const seconds = date.getSeconds().toString().padStart(2, '0');\n\n  // Converting 24hr format to 12hr format\n  const ampm = hours >= 12 ? 'PM' : 'AM';\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n\n  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds} ${ampm}`;\n}\n\n\nconst BetslipBet = ({bet}) => {\n    const loggedIn = useSelector((state) => state.auth.loggedIn);\n    const username = useSelector((state) => state.user.username);\n    // const balance = useSelector((state) => state.user.balance);\n    const authToken = useSelector((state) => state.auth.token);\n\n    const dispatch = useDispatch();\n\n    var betTypeName = null;\n    var odds = null;\n    var points = \"Money Line\";\n\n    if (bet.bet_type === \"moneyline_home\") {\n    betTypeName = \"Home\";\n    odds = bet.game.home_odds;\n    } else if (bet.bet_type === \"moneyline_away\") {\n      betTypeName = \"Away\";\n      odds = bet.game.away_odds;\n    } else if (bet.bet_type === \"home_spread\") {\n      betTypeName = \"Home Line\";\n      odds = bet.game.home_spread_odds;\n      points = formattedOddsSpread(bet.game.home_spread);\n    } else if (bet.bet_type === \"away_spread\") {\n      betTypeName = \"Away Line\";\n      odds = bet.game.away_spread_odds;\n      points = formattedOddsSpread(bet.game.away_spread);\n    } else if (bet.bet_type === \"total_over\") {\n      betTypeName = \"Over\";\n      odds = bet.game.over_odds;\n      points = `${bet.game.total}`;\n    } else if (bet.bet_type === \"total_under\") {\n      betTypeName = \"Under\";\n      odds = bet.game.under_odds;\n      points = `${bet.game.total}`;\n    }\n\n    const [formattedBet, setFormattedBet] = useState({\n      account_username: username,\n      game_id: bet.game.game_id,\n      bet_type: betTypeName, \n      odds: odds,\n      points: points,\n      wager: 0,\n      potential_payout: 0,\n      timestamp: formatTimestamp(Date.now())\n    });\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        // check balance to see if user has enough money to place bet\n        // if (balance < formattedBet.wager) {\n        //   console.log(\"Not enough funds. Please deposit more money.\");\n        //   alert(\"Not enough funds. Please deposit more money.\");\n        //   return;\n        // }\n\n        console.log(formattedBet);      \n\n        // Send the bet to the backend.\n        axios({\n          method: \"POST\",\n          url:\"http://0.0.0.0:5000//api/bets\",\n          headers: {\n            Authorization: 'Bearer ' + authToken\n          },\n          data: {\n            \"account_username\": formattedBet.account_username,\n            \"game_id\": formattedBet.game_id,\n            \"bet_type\": formattedBet.bet_type,\n            \"odds\": formattedBet.odds,\n            \"points\": formattedBet.points,\n            \"wager\": formattedBet.wager,\n            \"potential_payout\": formattedBet.potential_payout,\n            \"timestamp\": formattedBet.timestamp\n          }\n        })\n        .then((response) => {\n          if (response.status === 201) {\n            // balance = balance - formattedBet.wager;\n            dispatch(removeGameByIdAndType({game_id: bet.game.game_id, bet_type: bet.bet_type}));\n            console.log(\"Submitted bet.\");\n          }\n\n        }).catch((error) => {\n          if (error.response) {\n            if (error.response.status === 400) {\n              if (error.response.data.error === \"Insufficient funds for wager\") {\n                console.log(\"Not enough funds. Please deposit more money.\");\n                alert(\"Not enough funds. Please deposit more money.\");\n              } else if (error.response.data.error === \"Bet is not completely filled out\") {\n                console.log(\"Not enough funds. Please deposit more money.\");\n                alert(\"Invalid wager input. Please input a number to bet.\");\n            }\n\n            console.log(error.response)\n            console.log(error.response.status)\n            console.log(error.response.headers)\n            }\n        }})\n    };\n\n    const onRemove = (event) => {\n      event.preventDefault();\n\n      dispatch(removeGameByIdAndType({game_id: bet.game.game_id, bet_type: bet.bet_type}));\n      console.log(\"Remove a bet.\");\n      return;\n    }\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        if (name === \"wager\") {\n          let parsedValue = parseInt(value, 10); // Parse the value to an integer\n          let odds = 0;\n  \n          switch (bet.bet_type) {\n              case \"away_spread\":\n                  odds = parseFloat(bet.game.away_spread_odds, 10);\n                  break;\n              case \"home_spread\":\n                  odds = parseFloat(bet.game.home_spread_odds, 10);\n                  break;\n              case \"moneyline_away\":\n                  odds = parseFloat(bet.game.away_odds, 10);\n                  break;\n              case \"moneyline_home\":\n                  odds = parseFloat(bet.game.home_odds, 10);\n                  break;\n              case \"total_over\":\n                  odds = parseFloat(bet.game.over_odds, 10);\n                  break;\n              case \"total_under\":\n                  odds = parseFloat(bet.game.under_odds, 10);\n                  break;\n              default:\n                  // Handle unknown bet type\n                  break;\n          }\n  \n          if (!isNaN(parsedValue) && !isNaN(odds)) {\n              setFormattedBet(prevState => ({\n                  ...prevState, \n                  [name]: parsedValue, \n                  potential_payout: truncateToTwoDecimals((parsedValue * odds) - parsedValue)\n              }));\n          } else {\n              setFormattedBet(prevState => ({\n                ...prevState, \n                [name]: \"\", \n                potential_payout: \"\"\n            }));\n          }\n        }\n    };\n\n    useEffect(() => {\n      dispatch(addFinalizedBet({formattedBet: formattedBet}));\n    }, [formattedBet]);\n\n    return (\n      <ThemeProvider>\n\n        <BetslipContainer className=\"betslipBetContainer\">\n\n          {loggedIn === true ?\n          (<RemoveBetContainer>\n            <IconButton onClick={onRemove} sx={{color: \"red\", \":hover\": {color: \"black\"}}}>\n                <RemoveCircleOutlineIcon />\n            </IconButton>\n            <IconButton onClick={handleSubmit} sx={{color: \"green\", \":hover\": {color: \"black\"}}}>\n                <CheckCircleOutlineIcon />\n            </IconButton>\n          </RemoveBetContainer>) :\n\n          (<RemoveBetContainer>\n            <IconButton onClick={onRemove} sx={{color: \"red\", \":hover\": {color: \"black\"}}}>\n                <RemoveCircleOutlineIcon />\n            </IconButton>\n            <IconButton sx={{color: \"grey\", \":hover\": {color: \"grey\"}}}>\n                <CheckCircleOutlineIcon />\n            </IconButton>\n          </RemoveBetContainer>)\n            }\n\n          <BetslipBetInformationContainer className=\"betslipBetContainer\">\n            <TeamNameAndOddsContainer className=\"teamNameAndOddsContainer\">\n              <TeamNameContainer className=\"teamNameContainer\">\n                <Typography className=\"betslip-selectedTeam\" sx={{ fontWeight: 'bold', color: '#ffffff' }}>\n                  {\n                    bet.bet_type === 'away_spread'\n                    ? `${bet.game.away_team} ${formattedOddsSpread(bet.game.away_spread)}`\n                    : bet.bet_type === 'moneyline_away'\n                    ? `${bet.game.away_team}` \n                    : bet.bet_type === 'total_over'\n                    ? `Over ${bet.game.total}` \n                    : bet.bet_type === 'home_spread'\n                    ? `${bet.game.home_team} ${formattedOddsSpread(bet.game.home_spread)}` \n                    : bet.bet_type === 'moneyline_home'\n                    ? `${bet.game.home_team}` \n                    : bet.bet_type === 'total_under'\n                    ? `Under ${bet.game.total}` \n                    : 'Unknown Bet Type' // Fallback for unrecognized bet types\n                  }\n                </Typography>\n              </TeamNameContainer>\n\n                <OddsContainer className=\"oddsContainer\">\n                  <Typography className=\"betOdds\" variant=\"subtitle1\" sx={{ fontWeight: 'bold', color: '#ffffff' }}>\n                      {\n                        ({\n                        'away_spread': `${bet.game.away_spread_odds}`,\n                        'moneyline_away': `${bet.game.away_odds}`,\n                        'total_over': `${bet.game.over_odds}`,\n                        'home_spread': `${bet.game.away_spread_odds}`,   \n                        'moneyline_home': `${bet.game.home_odds}`, \n                        'total_under': `${bet.game.under_odds}`    \n                        })[bet.bet_type] || 'Unknown Bet Type'  // Default text if bet type doesn't match\n                      }\n                  </Typography>\n                </OddsContainer>\n            </TeamNameAndOddsContainer>\n\n            <TypeOfBetAndCashOutContainer className=\"typeOfBetAndCashOutContainer\">\n              <TypeOfBetContainer className=\"typeOfBetContainer\">\n              <Typography className=\"betOdds\" variant=\"caption\" sx={{ color: '#749d83' }}>\n              {formattedBetType(bet.bet_type)}\n              </Typography>\n              </TypeOfBetContainer>\n\n              <CashOutContainer className=\"cashOutContainer\">\n                {/* <Button variant=\"contained\" sx={{ my: 1, py: 1, px: 1, borderRadius: 20, fontSize: '0.5rem', backgroundColor: 'blue', '&:hover': { backgroundColor: 'darkblue' } }}>\n                    Cash Out\n                </Button> */}\n              </CashOutContainer>\n            </TypeOfBetAndCashOutContainer>\n\n            <VersusAndTimeContainer>\n              <VersusContainer className=\"versusContainer\">\n                <Typography className=\"betslip-betTeamNames\" variant=\"caption\" sx={{ textAlign: 'center' }}>\n                    {bet.game.away_team} @ {bet.game.home_team}\n                </Typography>\n              </VersusContainer>\n\n              <TimeContainer className=\"timeContainer\">\n              <Typography className=\"betslip-betTeamNames\" variant=\"caption\" sx={{ textAlign: 'center' }}>\n                {formatDateTime(bet.game.date)}\n              </Typography>\n              </TimeContainer>\n            </VersusAndTimeContainer>\n\n            <WagerAndWinContainer>\n              <WagerContainer className=\"wagerContainer\">\n                <TextField\n                        key={`${formattedBet.game_id}-${bet.bet_type}`}\n                        name=\"wager\" \n                        label=\"Wager\" \n                        variant=\"outlined\" \n                        InputLabelProps={{ style: { color: 'white' }, shrink: true }}\n                        InputProps={{ startAdornment: <InputAdornment className=\"dollarSignWager\" position=\"start\" style={{color: '#008001'}}><Typography style={{ color: '#008001' }}>$</Typography></InputAdornment>, style: { color: 'white' } }}\n                        sx={{ input: { color: 'white' }, label: { color: 'gray' }, borderColor: 'gray', '& .MuiOutlinedInput-root': { '& fieldset': { borderColor: 'gray' }, '&:hover fieldset': { borderColor: 'white' }, '&.Mui-focused fieldset': { borderColor: 'blue' } } }}\n                        onChange={handleChange}\n                        value={formattedBet.wager}\n                />\n              </WagerContainer>\n\n              <ToWinContainer className=\"toWinContainer\">\n                <TextField\n                        key={`${formattedBet.game_id}-${bet.bet_type}`}\n                        name=\"potential_payout\"\n                        label=\"To Win\"\n                        variant=\"outlined\" \n                        InputLabelProps={{ style: { color: 'white' }, shrink: true }}\n                        InputProps={{ startAdornment: <InputAdornment position=\"start\"><Typography style={{ color: '#008001' }}>$</Typography></InputAdornment>, style: { color: '#ffffff' } }}\n                        sx={{ input: { color: 'white' }, label: { color: 'gray' }, borderColor: 'gray', '& .MuiOutlinedInput-root': { '& fieldset': { borderColor: 'gray' }, '&:hover fieldset': { borderColor: 'white' }, '&.Mui-focused fieldset': { borderColor: 'blue' } } }}\n                        onChange={handleChange}\n                        value={formattedBet.potential_payout}\n                />\n              </ToWinContainer>\n            </WagerAndWinContainer>\n\n          </BetslipBetInformationContainer>\n        </BetslipContainer>\n\n      </ThemeProvider>\n    );\n};\n\nexport default BetslipBet;\n","import React, { useEffect } from 'react';\nimport { Box, Typography } from '@mui/material';\n\nconst CircleCounter = ({ number }) => {\n\n    useEffect(() => {\n    }, [number])\n\n\n    return (\n        <Box\n            display=\"flex\"\n            flexDirection=\"row\"\n            alignItems=\"center\"\n            justifyContent=\"center\" \n            borderRadius=\"50%\" \n            width=\"25px\" \n            height={\"auto\"} \n            bgcolor=\"primary.main\" \n            color=\"white\" \n            marginLeft=\"10px\"\n            marginRight=\"10px\"\n>\n            <Typography \n                variant=\"body3\" \n                style={{ fontWeight: \"bold\", textAlign: \"center\", color: \"black\", maxHeight: '100%' }}>\n                {number}\n            </Typography>\n        </Box>\n    );\n}\n\nexport default CircleCounter;","import { Grid, Typography, Paper } from '@mui/material';\nimport React from 'react';\n// empty betslip icon\nimport noBetsIcon from \"../img/nobet.png\"\n\n\nconst styles = {\n    container: {\n        background: 'black',\n        minHeight: '30vh',\n        marginTop: '20px', \n        padding: '20px', \n        minWidth: '200px',\n        width: '100%'\n    },\n    paper: {\n        background: 'black',\n        width: '100%',\n        color: '#cedae7'\n    },\n    image: {\n        width: '100%',\n        height: '100%',\n    },\n};\n\nconst EmptyBetslip = ({noBetsMessage, instructionsMessage}) => {\n\n    return (\n        <Grid container style={styles.container} justifyContent=\"center\" alignItems=\"center\">\n            <Paper elevation={3} style={styles.paper}>\n                <img src={noBetsIcon} alt=\"Empty Betslip\" style={styles.image} />\n                <Typography variant=\"h5\" align=\"center\">\n                    {noBetsMessage}\n                </Typography>\n                <Typography variant=\"h6\" align=\"center\">\n                    {instructionsMessage}\n                </Typography>\n            </Paper>\n        </Grid>\n    );\n}\n\nexport default EmptyBetslip;","// React\nimport { React, useEffect } from 'react';\n\n// Router\nimport { useNavigate } from \"react-router-dom\";\n\n// MUI\nimport { Button, Grid, Box } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { styled } from '@mui/system';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Components\nimport BetslipBet from './BetslipBet';\nimport CircleCounter from \"./CircleCounter\";\nimport EmptyBetslip from \"./EmptyBetslip\";\n\n// Slices\nimport { clearActiveBets, submitBets } from '../slices/activeBetSlice';\n\n// CSS\nimport \"../css/Betslip.css\"\n\n\nconst BetslipContainer = styled(Grid)({\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    maxWidth: '400px',\n    marginRight: 'auto'\n});\n\nconst BetslipHeaderContainer = styled(Grid)({\n    backgroundColor: '#131314',\n    borderBottom: '1px solid #2d2f30',\n    width: \"100%\",\n    justifyContent: 'flex-start',\n    padding: '30px',\n    position: 'relative',\n    marginBottom: '10px'\n})\n\nconst BetslipTitleCounter = styled(Grid)({\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n});\n\nconst BetslipsContainer = styled(Box)({\n    maxHeight: '650px',\n    overflow: 'auto',\n    marginBottom: 'auto',\n});\n\nconst RemoveBetsContainer = styled(Grid)({\n    display: 'flex',\n    justifyContent: 'center',\n    alignContent: \"center\",\n});\n\nconst RemoveButton = styled(Button)({\n    display: 'flex',\n    color: 'red',\n    backgroundColor: '#131314',\n    width: '100%',\n    ':hover': {\n        backgroundColor: 'red',\n        color: 'white'\n      },\n});\n\n\nconst SubmitBetsButton = styled(Button)({\n    display: 'flex',\n    backgroundColor: '#2f2d2f',\n    ':hover': {\n        backgroundColor: '#2b90ff',\n        color: 'white'\n      },\n});\n\nconst LoginOrSignupButton = styled(Button)({\n    display: 'flex',\n    color: 'green',\n    backgroundColor: '#2f2d2f',\n    ':hover': {\n        backgroundColor: 'green',\n        color: 'white'\n      },\n});\n\nconst SubmitAllBets = styled(Grid)({\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignContent: \"center\",\n    flexDirection: 'column',\n    width: '100%',\n    padding: '8px 0px 8px 0px',\n});\n\n\n\nconst Betslip = () => {\n    const dispatch = useDispatch();\n    const bets = useSelector((state) => state.activeBets.bets);\n    const finalizedBets = useSelector((state) => state.activeBets.finalizedBets);\n    const isLoggedIn = useSelector(state => state.auth.loggedIn);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n    }, [bets, finalizedBets])\n\n    return (\n        <BetslipContainer className=\"betslip-container\">\n\n            <BetslipHeaderContainer className=\"betslip-title-header\">\n                <BetslipTitleCounter className=\"betslip-title-counter\">\n                    <CircleCounter className=\"betslipCounterCircle\" number={bets.length} />\n                    <div className=\"betslip-title\"><b>Betslip</b></div>\n                </BetslipTitleCounter>\n            </BetslipHeaderContainer>\n\n            <BetslipsContainer className=\"betslip\">\n                {\n                    bets.length === 0 ? (\n                        <EmptyBetslip className=\"betslip-empty\" noBetsMessage=\"No bets selected\" instructionsMessage=\"Add selections to place bet\" img={null}/>\n                    ) : (\n                            <>\n                                {\n                                    bets.map((bet) => (\n                                        <BetslipBet key={`${bet.game.game_id}-${bet.bet_type}`} bet={bet}/>\n                                    ))\n                                }\n\n                                <RemoveBetsContainer className=\"removeBetsContainer\">\n                                    <RemoveButton startIcon={<DeleteIcon/>} onClick={() => dispatch(clearActiveBets())}>Remove all selections</RemoveButton>\n                                </RemoveBetsContainer>\n                            </>\n                        )\n                }\n            </BetslipsContainer>\n\n            <SubmitAllBets className='submitAllContainer'>\n                { isLoggedIn ? \n                (<SubmitBetsButton className=\"submitAllBetsButton\" onClick={() => dispatch(submitBets())}>Submit all bets!</SubmitBetsButton>)\n                :\n                (<LoginOrSignupButton onClick={() => navigate('/login')}>Login or Signup to Bet</LoginOrSignupButton>)\n                }\n            </SubmitAllBets>\n        </BetslipContainer>\n    );\n}\n\nexport default Betslip;","// Router DOM imports\nimport { Routes, Route, useMatch } from 'react-router-dom'\nimport React from 'react';\n\n// Material UI imports\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\n\nimport './css/App.css'\n\n// Pages\nimport Home from './pages/Home'\nimport Bets from './pages/Bets'\nimport Login from './pages/Login'\nimport SignUp from './pages/SignUp'\nimport Account from \"./pages/Account\"\nimport NFLPage from './pages/nfl'\nimport NBAPage from './pages/nba'\n\n// Components\nimport Navbar from \"./components/Navbar\"\nimport PrivateRoute from \"./components/PrivateRoute\"\nimport NotFound from \"./components/NotFound\"\nimport Sidebar from './components/Sidebar'\nimport Betslip from './components/Betslip'\n\n// React\nimport { useEffect } from 'react'\n\n// Redux\nimport { useSelector } from 'react-redux'\n\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n            main: '#2b90ff',\n        },\n        secondary: {\n            main: '#3f51b5',\n        },\n        white: {\n          main: '#ffffff'\n        }\n    },\n});\n\nfunction App() {\n    const isLoggedIn = useSelector(state => state.auth.loggedIn);\n    const hasToken = useSelector(state => state.auth.token);\n    const username = useSelector(state => state.user.username);\n    let loginmatch = useMatch(\"/login\");\n    let signupmatch = useMatch(\"/signup\");\n\n    useEffect(() => {\n        // console.log(\"App.js: isLoggedIn: \" + isLoggedIn)\n        // console.log(\"App.js: hasToken: \" + hasToken)\n        // console.log(\"App.js: username: \" + username)\n    }, [isLoggedIn, hasToken, username])\n\n    return (\n\n          <ThemeProvider theme={theme}>\n            <h2 className='hide-on-website'> Please View on Computer! </h2>\n                    <div className='hide-on-mobile'>  \n                        <div className=\"page-content\">\n                        <Navbar />\n\n                            <div className='under-navbar'>\n                                {(!loginmatch && !signupmatch) && (\n                                    <div className='side-bar-wrapper'>\n                                        <div className='side-bar'>\n                                            <Sidebar />\n                                        </div>\n                                    </div>)}\n\n                                <div className='middle'>\n                                    <Routes>\n                                        <Route path='/' element={<Home />} />\n                                        <Route path=\"/login\" element={<Login />} />\n                                        <Route path=\"/account\" element={<PrivateRoute auth={{ isLoggedIn: isLoggedIn }}> <Account /> </PrivateRoute>} />\n                                        <Route path='/bets' element={<PrivateRoute auth={{ isLoggedIn: isLoggedIn }}> <Bets /> </PrivateRoute>} />\n                                        <Route path='/signup' element={<SignUp />} />\n                                        <Route path='/nfl' element={<NFLPage />} />\n                                        <Route path='/nba' element={<NBAPage />} />\n                                        <Route path='/*' element={<NotFound />}/>\n                                    </Routes>\n                                </div>\n\n                                {(!loginmatch && !signupmatch) && (\n                                    <div className='bet-slip-wrapper'>\n                                        <div className='bet-slip'>\n                                            {!loginmatch && !signupmatch && <Betslip />}\n                                        </div>\n                                    </div>)}\n                            </div>\n\n                        </div>\n                    </div>\n          </ThemeProvider>\n    );\n  }\n\nexport default App\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    bets: []\n};\n\nconst betsSlice = createSlice({\n    name: 'bets',\n    initialState,\n    reducers: {\n        addBet: (state, action) => {\n            state.bets.push(action.payload);\n        },\n        removeBet: (state, action) => {\n            state.bets = state.bets.filter(bet => bet.id !== action.payload.id);\n        },\n        updateBet: (state, action) => {\n            const index = state.bets.findIndex(bet => bet.id === action.payload.id);\n            state.bets[index] = action.payload;\n        }\n    }\n})\n\nexport const { addBet, removeBet, updateBet } = betsSlice.actions;\nexport default betsSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\n\n// redux persist for authentication\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\n// user-defined reducers\nimport userReducer from './slices/userSlice';\nimport authReducer from './slices/authSlice';\nimport betsReducer from './slices/betSlice';\nimport activeBetsReducer from './slices/activeBetSlice';\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  blacklist: ['auth']\n}\n\nconst userPersistConfig = {\n  key: 'user',\n  storage,\n  blacklist: ['user']\n}\n\nconst persistAuthReducer = persistReducer(authPersistConfig, authReducer);\nconst persistUserReducer = persistReducer(userPersistConfig, userReducer);\n\nexport const store = configureStore({\n  reducer: {\n    user: persistUserReducer,\n    auth: persistAuthReducer,\n    bets: betsReducer,\n    activeBets: activeBetsReducer,\n  },\n});\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from \"./store\"\nimport { createTheme } from '@mui/material/styles'\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst theme = createTheme({\n  palette: {\n      primary: {\n          main: '#2b90ff',\n      },\n      secondary: {\n          main: '#3f51b5',\n      },\n  },\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Router>\n          <App />\n        </Router>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}